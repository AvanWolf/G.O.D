<?xml version="1.0" ?>
<!DOCTYPE TranscendenceExtension
[
    <!ENTITY modGOD                 "0xDCBA0040">
    <!ENTITY itGOD-DSAdvertiser     "0xDCBA0041">
    <!ENTITY svGODRed               "0xDCBA0042">
    <!ENTITY svGODBlue              "0xDCBA0043">
    <!ENTITY svGODGreen             "0xDCBA0044">
]>

<TranscendenceExtension UNID="&modGOD;" version="0.99c">


    <!--

        TODO:
            --  Add a Spawn item by name
            --  Add some team indicator to head-to-head



    -->

    <Globals>
        (block Nil

            ;; these are the base elements (actions) we have available
            (setq god_ScreenElements (list
                (list
                    'title      "Test Browse Ships"
                    'subtitle   ""
                    'action     '(god_Screen 'BrowseShips)
                )
                (list
                    'title      "Refuel"
                    'subtitle   "This will refuel any reactor that is known to me. If you encounter a reactor that can not be refueled, or does not refuel completely, please let me know."
                    'action     '(god_Screen 'Refuel)
                )
                (list
                    'title      "Browse Items (Identified)"
                    'subtitle   "*** WARNING: ALL ITEMS WILL BE IDENTIFIED ***\nBrowse and search all items in game. Add some to your cargo hold, or install them directly."
                    'action     (lambda Nil (block Nil
                        (dsf_SetScreenState 'ItemBrowserIdentify True)
                        (god_Screen 'BrowseItems)
                    ))
                )
                (list
                    'title      "Browse Items (Unidentified)"
                    'subtitle   "Browse and search all items in game. Add some to your cargo hold, or install them directly."
                    'action     '(god_Screen 'BrowseItems)
                )
                (list
                    'title      "Spawn Item by Name or UNID"
                    'subtitle   "If you remember the name or UNID of the item, this may be faster than browsing for it."
                    'action     '(god_Screen 'SpawnItemByNameOrUNID)
                )
                (list
                    'title      "Install Device"
                    'subtitle   "Install any item you have in your cargo hold. You can choose between installing it in the regular way, or forcefully"
                    'action     '(god_Screen 'InstallDevice)
                )
                (list
                    'title      "Remove Device"
                    'subtitle   "Remove any device you have installed on your ship."
                    'action     '(god_Screen 'RemoveDevice)
                )
                (list
                    'title      "Repair or Replace Armor"
                    'subtitle   "Fix up your armor, or replace segments"
                    'action     '(god_Screen 'RepairOrReplaceArmor)
                )
                (list
                    'title      "Browse Ships"
                    'subtitle   ""
                    'action     '(god_Screen 'BrowseShips)
                )
                (list
                    'title      "Browse Stations"
                    'subtitle   ""
                    'action     '(god_Screen 'BrowseStations)
                )
                (list
                    'title      "Spawn Head-to-Head"
                    'subtitle   ""
                    'action     '(god_Screen 'SpawnHeadToHead)
                )
                (list
                    'title      "Travel System"
                    'subtitle   "Travel to any location within this system. By default, only stations are shown"
                    'action     '(god_Screen 'TravelSystem)
                )
                (list
                    'title      "Travel Galaxy"
                    'subtitle   "Jump to any system in the entire galaxy."
                    'action     '(god_Screen 'TravelGalaxy)
                )
                (list
                    'title      "Map System"
                    'subtitle   "Reveal location on map of every station in the current system."
                    'action     '(god_Screen 'MapSystem)
                )
                (list
                    'title      "Repair Item"
                    'subtitle   ""
                    ;'action     '(god_RepairItem)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                )
                (list
                    'title      "Damage Item"
                    'subtitle   ""
                    ;'action     '(god_RepairItem)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                )
                (list
                    'title      "Add Item Enhancement"
                    'subtitle   ""
                    ;'action     '(god_AddEnhancement)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                )
                (list
                    'title      "Analyze Item Enhancements"
                    'subtitle   ""
                    ;'action     '(god_AnalyzeEnchacements)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                )
                (list
                    'title      "Inspect Target"
                    'subtitle   ""
                    ;'action     '(god_InspectTarget)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Install Target Device"
                    'subtitle   ""
                    ;'action     '(god_InstallTargetDevice)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Remove Target Device"
                    'subtitle   ""
                    ;'action     '(god_RemoveTargetDevice)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Repair or Replace Target Armor"
                    'subtitle   ""
                    ;'action     '(god_ManageTargetArmor)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Change Target Orders"
                    'subtitle   ""
                    ;'action     '(god_ChangeTargetOrders)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Change Target Name"
                    'subtitle   ""
                    ;'action     '(god_ChangeTargetName)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Set Target As Wingman"
                    'subtitle   ""
                    ;'action     '(god_SetTargetAsWingman)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                    'hideList   '(not (objGetTarget gPlayerShip))
                )
                (list
                    'title      "Banking - Deposit"
                    'subtitle   "Add credits to your account."
                    'action     '(god_Screen 'BankingDeposit)
                )
                (list
                    'title      "Banking - Withdraw"
                    'subtitle   "Remove credits from your account."
                    'action     '(god_Screen 'BankingWithdraw)
                )
                ;; TODO: I need to look at the whole insurance framework
                ;(list
                ;    'title      "Add Insurance"
                ;    'subtitle   ""
                ;    'action     '(god_AddInsurance)
                ;    'action     '(block Nil
                ;        (dsf_SetPaneDesc "I do nothing yet")
                ;        Nil
                ;    )
                ;)
                ;; TODO: there is probably a ton of new game data
                ;(list
                ;    'title      "Change Game Data"
                ;    'subtitle   ""
                ;    'action     '(god_ChangeGameData)
                ;    'action     '(block Nil
                ;        (dsf_SetPaneDesc "I do nothing yet")
                ;        Nil
                ;    )
                ;)
                (list
                    'title      "Freeze Time"
                    'subtitle   ""
                    ;'action     '(god_FreezeTime)
                    'action     '(block Nil
                        (dsf_SetPaneDesc "I do nothing yet")
                        Nil
                    )
                )
            ))


    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; SCREEN ACTIONS
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

            (setq god_Screen (lambda (screen) (block Nil
                (switch

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; INITIAL SCREEN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'Initial)
                        (block Nil
                            (dsf_ResetScreenStore 'CustomFilterScreen)
                            (dsf_SetScreenState 'CustomFilterData god_ScreenElements)
                            (dsf_SetScreenState 'CustomFilterOverride (list
                                'screenName     "Galactic Omni Device"
                                'preInitFunc    '(dsf_RemoveScreenState 'GOD_PaneToggle)
                                'actions        (list
                                    (list
                                        'name       '("Select" 'S)
                                        'runFunc    '(block (action)
                                            (setq action (dsf_GetListEntryData 'action))
                                            (dsf_DoFunc action)
                                        )
                                    )
                                )
                            ))
                            (dsf_CustomFilterScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BROWSE ITEMS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    
                    (eq screen 'Refuel)
                        (block Nil
                            ;; just pump it full of Longzhu's
                            (shpRefuelFromItem gPlayerShip (itmCreate &itLongzhuSphere; 2000))
                            (dsf_SetPaneDesc "Your reactor has been refueled.\n\n")
                            Nil
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BROWSE ITEMS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'BrowseItems)
                        (block Nil
                            (dsf_ResetScreenStore 'ItemBrowserScreen)
                            (dsf_SetScreenState 'ItemBrowserOverride (list
                                'screenName         "Browse Items"
                                'actions            (list
                                    (list
                                        'name       '("Add to Cargo Hold" 'A)
                                        'runFunc    (lambda Nil (block Nil
                                            (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                                                (block (cnt itm flag)
                                                    (setq cnt (scrGetCounter gScreen))
                                                    (setq itm (scrGetItem gScreen))
                                                    ;; instead of adding item to ship, we add it to the saved screen state
                                                    (dsf_SetScreenState 
                                                        'ItemBrowserInventory 
                                                        (lnkAppend 
                                                            (dsf_GetScreenState 'ItemBrowserInventory) 
                                                            (itmCreate (itmGetUNID itm) cnt)
                                                        )
                                                    )
                                                    (scrShowPane gScreen "Default")
                                                    (scrSetActionLabel gScreen 1 "Add to Cargo Hold" 'A)
                                                    ;; pluralize item name
                                                    (if (eq cnt 1) (setq flag 1) (setq flag 3))
                                                    (dsf_SetPaneDesc (cat "Added " cnt " \"" (itmGetName itm flag) "\" to your cargo hold."))
                                                    Nil
                                                )
                                                (block Nil
                                                    (scrShowPane gScreen "Counter")
                                                    (scrSetActionLabel gScreen 1 "Complete Action" 'C)
                                                    (scrSetCounter gScreen 1)
                                                    (dsf_SetScreenState 'GOD_PaneToggle True)
                                                    (dsf_SetPaneDesc (cat "Select the amount of \"" (itmGetName (scrGetItem gScreen) 3) "\" you want to add to your cargo hold."))
                                                    Nil
                                                )
                                            )
                                        ))
                                    )
                                    (list
                                        'name           '("Install (Force)" 'I)
                                        'noSave         True
                                        'runFunc        (lambda Nil (block (itm result)
                                            (setq itm (scrGetItem gScreen))
                                            (dsf_SetScreenState 'ItemBrowserInitialItem itm)
                                            (setq result (god_InstallItem itm))
                                            (dsf_SetScreenState 'ItemBrowserPaneDesc (cat (item result 1) "\n\n"))
                                            (dsf_ItemBrowserScreen)
                                        ))
                                    )
                                    (list
                                        'name           '("Identify" 'Y)
                                        'noSave         True
                                        'hideFunc       '(dsf_GetScreenState 'ItemBrowserIdentify)
                                        'disableFunc    '(itmIsKnown (scrGetItem gScreen))
                                        'runFunc        (lambda Nil (block (type)
                                            (setq type (itmGetUNID (scrGetItem gScreen)))
                                            (itmSetKnown type)
                                            (dsf_SetScreenState 'ItemBrowserPaneDesc "Identified Item\n\n")
                                            (dsf_SetScreenState 'ItemBrowserInitialItem (scrGetItem gScreen))
                                            (dsf_ItemBrowserScreen)
                                        ))
                                    )
                                )
                            ))
                            (dsf_SetScreenState 'ItemBrowserSearch "*")
                            (dsf_ItemBrowserScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SPAWN ITEM BY NAME OR UNID
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'SpawnItemByNameOrUNID)
                        (list
                            'screenName         "Spawn Item by Name or UNID"
                            'screenType         "CustomPicker"
                            'preInitFunc        '(dsf_RemoveScreenState 'GOD_PaneToggle)
                            'paneDesc           "Enter name or UNID (prefixed with 0x) of item you want to spawn."
                            'actions            (list
                                (list
                                    'name           '("Enter Name or UNID" 'E)
                                    'noSave         True
                                    'runFunc        (lambda Nil (block (input type)
                                        (if (dsf_GetScreenState 'GOD_PaneToggle)
                                            (block Nil
                                                (setq input (scrGetInputText gScreen))
                                                (if (eq (strFind input "0x") 0)
                                                    ;; input was a unid... convert it
                                                    (block Nil
                                                        (setq type (int input))
                                                        ;; double check the type exists
                                                        (if (not (find (typFind "i") type))
                                                            (setq type Nil)
                                                        )
                                                    )
                                                    ;; input is a name... see if we can convert it
                                                    (block Nil
                                                        (setq type (unvUNID input))
                                                        (if (eq (item type 1) 'itemtype)
                                                            (setq type (item type 0))
                                                            (setq type Nil)
                                                        )
                                                    )
                                                )
                                                ;; if we don't have a type here, inform the player
                                                (if (not type)
                                                    (block Nil
                                                        (dsf_SetPaneDesc "No item found matching input text. Please try again")
                                                        Nil
                                                    )
                                                    ;; else add it to custompicker list
                                                    (block (data)
                                                        (dsf_RemoveScreenState 'GOD_PaneToggle)
                                                        (setq data (dsf_GetScreenState 'GOD_ItemSpawnState (list)))
                                                        (dsf_SetScreenState 'GOD_ItemSpawnState (append data type))
                                                        (dsf_BuildPaneDesc (list (cat "Added \"" (typGetDataField type 'name) "\" to list.\n\n") '+))
                                                        ;; return to this screen
                                                        (god_Screen 'SpawnItemByNameOrUNID)
                                                    )
                                                )
                                            )
                                            (block Nil
                                                (scrShowPane gScreen "TextInput")
                                                (dsf_SetScreenState 'GOD_PaneToggle True)
                                                Nil
                                            )
                                        )
                                    ))
                                )
                                (list
                                    'name           '("Add to Cargo Hold" 'A)
                                    'noSave         True
                                    'disableFunc    '(not (dsf_GetListEntryData 'type))
                                    'runFunc        (lambda Nil (block Nil
                                        (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                                            (block (cnt type itm flag)
                                                (setq cnt (scrGetCounter gScreen))
                                                (setq type (dsf_GetListEntryData 'type))
                                                (objAddItem gPlayerShip (setq itm (itmCreate type cnt)))
                                                (scrShowPane gScreen "Default")
                                                (scrSetActionLabel gScreen 1 "Add to Cargo Hold" 'A)
                                                ;; pluralize item name
                                                (if (eq cnt 1) (setq flag 1) (setq flag 3))
                                                (dsf_SetPaneDesc (cat "Added " cnt " \"" (itmGetName itm flag) "\" to your cargo hold."))
                                                Nil
                                            )
                                            (block Nil
                                                (scrShowPane gScreen "Counter")
                                                (scrSetActionLabel gScreen 1 "Complete Action" 'C)
                                                (scrSetCounter gScreen 1)
                                                (dsf_SetScreenState 'GOD_PaneToggle True)
                                                (dsf_SetPaneDesc (cat "Select the amount of \"" (itmGetName (itmCreate (dsf_GetListEntryData 'type) 1) 3) "\" you want to add to your cargo hold."))
                                                Nil
                                            )
                                        )
                                    ))
                                )
                                (list
                                    'name           '("Install (Force)" 'I)
                                    'noSave         True
                                    'disableFunc    '(not (dsf_GetListEntryData 'type))
                                    'runFunc        (lambda Nil (block (result)
                                        (setq result (god_InstallItem (itmCreate (dsf_GetListEntryData 'type) 1)))
                                        (dsf_SetPaneDesc (item result 1))
                                        Nil
                                    ))
                                )
                                (list
                                    'name           '("Identify" 'Y)
                                    'noSave         True
                                    'disableFunc    '(not (dsf_GetListEntryData 'type))
                                    'runFunc        (lambda Nil (block (type)
                                        (setq type (dsf_GetListEntryData 'type))
                                        (itmSetKnown type)
                                        (dsf_BuildPaneDesc (list (cat "Identified item.\n\n") '+))
                                        (god_Screen 'SpawnItemByNameOrUNID)
                                    ))
                                )
                            )
                            'backFunc           '(dsf_RemoveScreenState 'GOD_ItemSpawnState)
                            'customPicker       (block (data)
                                (setq data (dsf_GetScreenState 'GOD_ItemSpawnState (list)))
                                (setq data (dsf_ListMap data type (list
                                    'title      (typGetDataField type 'name)
                                    'subtitle   (typGetDataField type 'description)
                                    'image      (itmGetImageDesc (itmCreate type 1))
                                    'type       type
                                )))
                                data
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; INSTALL DEVICE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'InstallDevice)
                        (block (screen)
                            (setq screen (list
                                'screenName         "Install Device"
                                'paneDesc           "Select an action from the list"
                                'actions            (list
                                    (list
                                        'name           '("Force Install" 'F)
                                        'disableFunc    '(not (scrGetItem gScreen))
                                        'runFunc        (lambda Nil (block (itm)
                                            (setq result (god_InstallItem (scrGetItem gScreen) Nil True))
                                            (dsf_SetPaneDesc (item result 1))
                                            Nil
                                        ))
                                    )
                                    (list
                                        'name           '("Normal Install" 'N)
                                        'disableFunc    '(not (scrGetItem gScreen))
                                        'runFunc        (lambda Nil (block (itm)
                                            (setq result (god_InstallItem (scrGetItem gScreen) True True))
                                            (dsf_SetPaneDesc (item result 1))
                                            Nil
                                        ))
                                    )
                                    (list
                                        'name           '("Add Items (Identified)" 'A)
                                        'runFunc        (lambda Nil (block Nil
                                            (dsf_SetScreenState 'ItemBrowserIdentifyItems True)
                                            (god_Screen 'BrowseItems)
                                        ))
                                    )
                                    (list
                                        'name           '("Add Items (Unidentified)" 'A)
                                        'runFunc        (lambda Nil (block Nil
                                            (god_Screen 'BrowseItems)
                                        ))
                                    )
                                )
                            ))
                            (dsf_ItemPickerScreen 'player "dUN" screen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; REMOVE DEVICE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'RemoveDevice)
                        (block Nil
                            (setq gPrevScreen (dsf_ScreenTypeToUNID 'CustomPicker))
                            (setq gPrevPane "Default")
                            (setq dsf_ReturnData (god_Screen 'Initial))
                            (setq gMargin 0)
                            (dsf_SetScreenState 'CustomFilterInitialPosition (dsf_GetListEntryData '_position))
                            (scrShowScreen gScreen "&dsRemoveDevice;")
                            Nil
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; REPAIR OR REPLACE ARMOR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'RepairOrReplaceArmor)
                        (block Nil
                            (setq gPrevScreen (dsf_ScreenTypeToUNID 'CustomPicker))
                            (setq gPrevPane "Default")
                            (setq dsf_ReturnData (god_Screen 'Initial))
                            (setq gTechLevel 15)
                            (setq gArmorSegment 0)
                            (setq gMargin 0)
                            (dsf_SetScreenState 'CustomFilterInitialPosition (dsf_GetListEntryData '_position))
                            (scrShowScreen gScreen "&dsRepairArmor;")
                            Nil
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SPAWN SHIP BY NAME OR UNID
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'SpawnShipByNameOrUNID)
                        (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                            (block (input type)
                                (setq input (scrGetInputText gScreen))
                                (if (eq (strFind input "0x") 0)
                                    ;; input was a unid... convert it
                                    (block Nil
                                        (setq type (int input))
                                        ;; double check the type exists
                                        (if (not (find (typFind "s") type))
                                            (setq type Nil)
                                        )
                                    )
                                    ;; input is a name... see if we can convert it
                                    (block Nil
                                        (setq type (unvUNID input))
                                        (if (eq (item type 1) 'shipclass)
                                            (setq type (item type 0))
                                            (setq type Nil)
                                        )
                                    )
                                )
                                ;; if we don't have a type here, inform the player
                                (if (not type)
                                    (block Nil
                                        (dsf_SetPaneDesc "No ship found matching input text. Please try again")
                                        Nil
                                    )
                                    (block Nil
                                        (scrShowPane gScreen "Default")
                                        (scrSetActionLabel gScreen 1 "Spawn By Name or UNID" 'N)
                                        ;; add ship type to spawn ship list
                                        Nil
                                    )
                                )
                            )
                            (block Nil
                                (scrShowPane gScreen "TextInput")
                                (scrSetActionLabel gScreen 1 "Complete Action" 'C)
                                (dsf_SetScreenState 'GOD_PaneToggle True)
                                (dsf_SetPaneDesc "Enter name or UNID (prefixed with 0x) of ship you want to spawn.")
                                Nil
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BROWSE SHIPS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'BrowseShips)
                        (block (data)
                            (dsf_ResetScreenStore 'CustomFilterScreen)
                            (dsf_SetScreenState 'CustomFilterOverride (list
                                'screenName         "Browse Ships"
                                'actions            (list
                                    (list
                                        'name       '("Add to spawn list" 'A)
                                        'noSave     True
                                        'runFunc    (lambda Nil (block Nil
                                            (god_AddToSpawnList (dsf_GetListEntryData 'type) 'ship)
                                            (dsf_SetPaneDesc (cat "Added one \"" (dsf_GetListEntryData 'title) "\" to spawn list"))
                                            Nil
                                        ))
                                    )
                                    (list
                                        'name       '("Spawn Head To Head" 'S)
                                        'runFunc    (lambda Nil (block Nil
                                            (dsf_ResetScreenStore 'CustomFilterScreen)
                                            (god_Screen 'SpawnHeadToHead)
                                        ))
                                    )
                                    (list
                                        'name       '("View Details" 'V)
                                        'runFunc    (lambda Nil (block Nil
                                            Nil
                                        ))
                                    )
                                )
                            ))
                            (setq data (typFind "s"))
                            ;; sort the data
                            (setq data (dsf_ListSort data t1 t2
                                (ls (typGetDataField t1 'name) (typGetDataField t2 'name))
                            ))
                            (setq data (dsf_ListSort data t1 t2
                                (ls (typGetDataField t1 'level) (typGetDataField t2 'level))
                            ))
                            ;; filter the data to clear out Nil ships
                            (setq data (filter data type (not (eq (typGetDataField type 'name) ""))))

                            (dsf_SetScreenState 'CustomFilterData (dsf_ListMap data type (list
                                'title      (typGetDataField type 'name)
                                'subtitle   (block (desc)
                                    (setq desc "")
                                    (if (not (eq (setq desc (typGetDataField type 'manufacturer)) ""))
                                        (setq desc (cat "Manufacturer: " desc "\n"))
                                    )
                                    (setq desc (cat desc "Level: " (typGetDataField type 'level)))
                                )
                                'type       type
                            )))
                            (dsf_CustomFilterScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BROWSE STATIONS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'BrowseStations)
                        (block (data)
                            (dsf_ResetScreenStore 'CustomFilterScreen)
                            (dsf_SetScreenState 'CustomFilterOverride (list
                                'screenName         "Browse Stations"
                                'actions            (list
                                    (list
                                        'name       '("Add to spawn list" 'A)
                                        'noSave     True
                                        'runFunc    (lambda Nil (block Nil
                                            Nil
                                        ))
                                    )
                                    (list
                                        'name       '("View Details" 'V)
                                        'runFunc    (lambda Nil (block Nil
                                            Nil
                                        ))
                                    )
                                )
                            ))
                            (setq data (typFind "t"))
                            ;; sort the data
                            (setq data (dsf_ListSort data t1 t2
                                (ls (typGetDataField t1 'name) (typGetDataField t2 'name))
                            ))
                            (setq data (dsf_ListSort data t1 t2
                                (ls (typGetDataField t1 'level) (typGetDataField t2 'level))
                            ))

                            (dsf_SetScreenState 'CustomFilterData (dsf_ListMap data type (list
                                'title      (typGetDataField type 'name)
                                'subtitle   (cat "Level: " (typGetDataField type 'level))
                                'type       type
                            )))
                            (dsf_CustomFilterScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SPAWN LIST
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'SpawnHeadToHead)
                        (block (data posFunc)
                            (dsf_SetScreenState 'CustomFilterOverride (list
                                'screenName     "Spawn Head To Head"
                                'paneDesc       "This is the list of ships set to be spawned in Head to Head combat."
                                'actions        (list
                                    (list
                                        'name           '("Set Position" 'P)
                                        'noSave         True
                                        'disableFunc    '(not (dsf_GetScreenState 'GOD_SpawnList))
                                        'runFunc        (lambda Nil (block Nil
                                            (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                                                (block (loc pos)
                                                    (setq loc (scrGetInputText gScreen))
                                                    (scrShowPane gScreen "Default")
                                                    (setq pos (dsf_GetListEntryData '_position))
                                                    (if (strFind loc "/")
                                                        (block (dist ang)
                                                            (setq dist (subset loc 0 (strFind loc "/")))
                                                            (setq ang (subset loc (add (strFind loc "/") 1)))
                                                            (if (or (gr (int ang) 359) (ls (int ang) 0)) (setq ang 0))
                                                            (setq loc (cat dist "/" ang))
                                                        )
                                                        (setq loc 'random)
                                                    )
                                                    (god_UpdateSpawnList pos 'position loc)
                                                    (dsf_SetScreenState 'CustomFilterInitialPosition pos)
                                                    (god_Screen 'SpawnHeadToHead)
                                                )
                                                (block Nil
                                                    (scrShowPane gScreen "TextInput")
                                                    (scrSetInputText gScreen (dsf_GetListEntryData 'position))
                                                    (dsf_SetScreenState 'GOD_PaneToggle True)
                                                    (dsf_SetPaneDesc "Set the position you want the ship to spawn at. Either `random' or distance/angle")
                                                    Nil
                                                )
                                            )
                                        ))
                                    )
                                    (list
                                        'name           '("Set Count" 'C)
                                        'noSave         True
                                        'disableFunc    '(not (dsf_GetScreenState 'GOD_SpawnList))
                                        'runFunc        (lambda Nil (block Nil
                                            (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                                                (block (cnt pos)
                                                    (setq cnt (scrGetCounter gScreen))
                                                    (if (ls cnt 1) (setq cnt 1))
                                                    (scrShowPane gScreen "Default")
                                                    (setq pos (dsf_GetListEntryData '_position))
                                                    (god_UpdateSpawnList pos 'count cnt)
                                                    (dsf_SetScreenState 'CustomFilterInitialPosition pos)
                                                    (god_Screen 'SpawnHeadToHead)
                                                )
                                                (block Nil
                                                    (scrShowPane gScreen "Counter")
                                                    (scrSetCounter gScreen 1)
                                                    (dsf_SetScreenState 'GOD_PaneToggle True)
                                                    (dsf_SetPaneDesc "Set how many of this ship you want to spawn.")
                                                    Nil
                                                )
                                            )
                                        ))
                                    )
                                    (list
                                        'name           '("Cycle Team" 'T)
                                        'noSave         True
                                        'disableFunc    '(not (dsf_GetScreenState 'GOD_SpawnList))
                                        'runFunc        (lambda Nil (block (pos sov)
                                            (setq pos (dsf_GetListEntryData '_position))
                                            (setq sov (dsf_GetListEntryData 'sovereign))
                                            (switch
                                                (eq sov &svGODRed;)
                                                    (setq sov &svGODBlue;)
                                                (eq sov &svGODBlue;)
                                                    (setq sov &svGODGreen;)
                                                (eq sov &svGODGreen;)
                                                    (setq sov &svGODRed;)
                                            )
                                            (god_UpdateSpawnList pos 'sovereign sov)
                                            (dsf_SetScreenState 'CustomFilterInitialPosition pos)
                                            (god_Screen 'SpawnHeadToHead)
                                        ))
                                    )
                                    (list
                                        'name           '("Remove" 'R)
                                        'noSave         True
                                        'disableFunc    '(not (dsf_GetScreenState 'GOD_SpawnList))
                                        'runFunc        (lambda Nil (block (pos)
                                            (setq pos (dsf_GetListEntryData '_position))
                                            (god_RemoveFromSpawnList pos)
                                            (dsf_SetScreenState 'CustomFilterInitialPosition pos)
                                            (dsf_SetPaneDesc "Removed ship from spawn list")
                                            (god_Screen 'SpawnHeadToHead)
                                        ))
                                    )
                                    (list
                                        'name           '("Spawn and Exit" 'S)
                                        'disableFunc    '(not (dsf_GetScreenState 'GOD_SpawnList))
                                        'runFunc        (lambda Nil (block Nil
                                            (god_HeadToHeadSpawnList)
                                            (dsf_ExitAction)
                                        ))
                                    )
                                )
                            ))
                            (setq data (dsf_GetScreenState 'GOD_SpawnList (list)))

                            (setq posFunc (lambda (pos) (block Nil
                                (if (eq pos 'random)
                                    "Random"
                                    (cat (subset pos 0 (strFind pos "/")) " ls / " (subset pos (add (strFind pos "/") 1)) "&#176;")
                                )
                            )))

                            (setq data (dsf_ListMap data el (list
                                'title      (typGetDataField (dsf_HashGet el 'type) 'name)
                                'subtitle   (block Nil
                                    (cat 
                                        "Position: " (apply posFunc (list (dsf_HashGet el 'position))) "\n"
                                        "Count: " (dsf_HashGet el 'count) "\n"
                                        "Team: " (typGetDataField (dsf_HashGet el 'sovereign) 'name)
                                    )
                                )
                                'count      (dsf_HashGet el 'count)
                                'position   (dsf_HashGet el 'position)
                                'sovereign  (dsf_HashGet el 'sovereign)
                            )))

                            (dsf_SetScreenState 'CustomFilterData data)
                            (dsf_SetScreenState 'CustomFilterHideFilter True)
                            (dsf_CustomFilterScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TRAVEL SYSTEM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'TravelSystem)
                        (block (screen)
                            (dsf_ResetScreenStore 'ObjectBrowserScreen)
                            (dsf_SetScreenState 'ObjectBrowserOverride (list
                                'screenName     "System Travel"
                                'paneDesc       "Select any location in the system to travel to.\n\n"
                                'actions        (list
                                    (list
                                        'name       '("Select" 'S)
                                        'runFunc    '(block (pos)
                                            (setq pos (objGetPos (dsf_GetListEntryData 'obj)))
                                            (objJumpTo gPlayerShip pos)
                                            (plyMessage gPlayer (cat "Jumped to " (dsf_GetListEntryData 'title)))
                                            (dsf_ExitAction)
                                        )
                                    )
                                )
                            ))
                            (dsf_SetScreenState 'ObjectBrowserIncludeCenter True)
                            (dsf_SetScreenState 'ObjectBrowserSource gPlayerShip)
                            (dsf_SetScreenState 'ObjectBrowserSearch "TF")
                            (dsf_ObjectBrowserScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TRAVEL GALAXY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'TravelGalaxy)
                        (block (data)
                            (dsf_ResetScreenStore 'CustomFilterScreen)
                            (dsf_SetScreenState 'CustomFilterOverride (list
                                'screenName     "Galaxy Travel"
                                'paneDesc       "Select the star system you want to travel to.\n\n"
                                'actions        (list
                                    (list
                                        'name       '("Select" 'S)
                                        'runFunc    '(block (dest)
                                            (setq dest (dsf_GetListEntryData 'dest))
                                            (objGateTo gPlayerShip dest (item (sysGetStargates dest) 0) &efStargateOut;)
                                            (plyMessage gPlayer (cat "Jumped to " (dsf_GetListEntryData 'title)))
                                            (dsf_ExitAction)
                                        )
                                    )
                                )
                            ))
                            (setq data (dsf_ListSort (sysGetNodes) s1 s2
                                (ls (sysGetName s1) (sysGetName s2))
                            ))
                            (setq data (dsf_ListSort data s1 s2
                                (ls (sysGetLevel s1) (sysGetLevel s2))
                            ))
                            ;; remove EndGame
                            (lnkRemove data (find data "EndGame") Nil)
                            (dsf_SetScreenState 'CustomFilterData (dsf_ListMap data el (list
                                'title      (sysGetName el)
                                'subtitle   (cat "Level: " (sysGetLevel el))
                                'dest       el
                            )))
                            (dsf_CustomFilterScreen)
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BANKING - DEPOSIT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'BankingDeposit)
                        (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                            (block (amount)
                                (setq amount (scrGetCounter gScreen))
                                (plyCredit gPlayer amount)
                                (scrShowPane gScreen "Default")
                                (scrSetActionLabel gScreen 1 "Select" 'S)
                                (dsf_SetPaneDesc (cat "Deposited " amount " credits."))
                                Nil
                            )
                            (block Nil
                                (scrShowPane gScreen "Counter")
                                (scrSetActionLabel gScreen 1 "Complete Action" 'C)
                                (dsf_SetScreenState 'GOD_PaneToggle True)
                                (dsf_SetPaneDesc "Select the amount of credits you want to deposit.")
                                Nil
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BANKING - WITHDRAW
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'BankingWithdraw)
                        (if (dsf_RemoveScreenState 'GOD_PaneToggle)
                            (block (amount current)
                                (setq amount (scrGetCounter gScreen))
                                (setq current (plyGetCredits gPlayer))
                                (if (gr amount current)
                                    (dsf_SetPaneDesc (cat "You can not withdraw that amount from your account. Please enter a new amount and try again."))
                                    (block Nil
                                        (plyCharge gPlayer amount)
                                        (scrShowPane gScreen "Default")
                                        (scrSetActionLabel gScreen 1 "Select" 'S)
                                        (dsf_SetPaneDesc (cat "Withdrew " amount " credits."))
                                    )
                                )
                                Nil
                            )
                            (block Nil
                                (scrShowPane gScreen "Counter")
                                (scrSetActionLabel gScreen 1 "Complete Action" 'C)
                                (dsf_SetScreenState 'GOD_PaneToggle True)
                                (dsf_SetPaneDesc "Select the amount of credits you want to withdraw.")
                                Nil
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; MAP SYSTEM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen 'MapSystem)
                        (block Nil
                            (enum (sysFindObject gSource "Ts") obj
                                (objSetKnown obj)
                            )
                            (dsf_SetPaneDesc "Mapped system.")
                            Nil
                        )
                )
            )))

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; HELPER FUNCTIONS
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

            ;; returns True or a tuple with error code and error message
            ;; we only fail on a few of the conditions, namely those
            ;; that can not be fixed without user input
            ;; In other words, we always install
			(setq god_InstallItem (lambda (itm normal cargo target)
                (block (canInstall result code)
                    ;; if we don't have a target, it is the player
                    (if (not target) (setq target gPlayerShip))

                    (setq canInstall (shpCanInstallDevice target itm))

                    (switch
                        (and (itmHasModifier itm "Military") (not (objGetItems gPlayerShip "*+MilitaryID")))
                            (setq result '(1 "You must have a military ID to install this item."))
                        (eq canInstall 2)
                            (setq result '(2 "Your ship cannot support any more devices."))
                        (and (itmHasModifier itm "Illegal") (not (objGetItems gPlayerShip "*+BlackMarketID")))
                            (setq result '(3 "You must have a black market ID to install this item."))
                        (eq canInstall 4)
                            (setq result '(4 "Your ship already has a shield generator installed."))
                        (eq canInstall 5)
                            (setq result '(5 "Your ship already has a propulsion system installed."))
                        (eq canInstall 6)
                            (setq result '(6 "Your ship already has a missile launcher installed."))
                        (eq canInstall 7)
                            (setq result '(7 "Your ship's reactor is not powerful enough for this device."))
                        (eq canInstall 8)
                            (setq result '(8 "Your ship already has a cargo expansion system installed."))
                        (eq canInstall 9)
                            (setq result '(9 "Your ship already has a reactor installed."))
                        ;; XXX: this one can perhaps be 'normal'
                        (eq canInstall 10)
                            (setq result '(10 "The cargo expansion system is too large to be installed in your ship."))
                        ;; XXX: this one can perhaps be 'normal'
                        (eq canInstall 11)
                            (setq result '(11 "The power output of the item is too high for your ship."))
                        (eq canInstall 12)
                            (setq result '(12 "Your ship cannot support any more weapons."))
                        (eq canInstall 13)
                            (setq result '(13 "Your ship cannot support any more non-weapon devices."))
                        (not (eq canInstall 0))
                            (setq result '(14 "This item can not be installed."))
                        (setq result '(True))
                    )
                    ;; if result is True, then we install right away
                    (setq code (item result 0))
                    (if (or (eq code True) (find '(4 5 6 8 9) code) (and (not normal) (find '(1 3) code)))
                        (block (name)
                            (setq name (itmGetName itm 1))
                            (switch
                                (eq code 4)
                                    (setq result (list True (cat "Replaced shield generator with " name)))
                                (eq code 5)
                                    (setq result (list True (cat "Replaced propulsion system with " name)))
                                (eq code 6)
                                    (block Nil
                                        (shpRemoveDevice target (item (objGetItems target "Il") 0))
                                        (setq result (list True (cat "Replaced missile launcher with " name)))
                                    )
                                (eq code 8)
                                    (setq result (list True (cat "Replaced current cargo expansion with " name)))
                                (eq code 9)
                                    (setq result (list True (cat "Replaced reactor with " name)))
                                (setq result (list True (cat "Installed " name)))
                            )
                            (if (not cargo) (objAddItem target itm))
                            (shpInstallDevice target itm)
                        )
                    )
                    result
                )
            ))

        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ;; SPAWN LIST FUNCTIONS
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

            (setq god_AddToSpawnList (lambda (type class)
                (block (spawnList sov)
                    (setq spawnList (dsf_GetScreenState 'GOD_SpawnList (list)))
                    (if spawnList
                        (setq sov &svGODBlue;)
                        (setq sov &svGODRed;)
                    )
                    (lnkAppend spawnList (list
                        'type type
                        'class class
                        'count 1
                        'position 'random
                        'sovereign sov
                    ))
                    (dsf_SetScreenState 'GOD_SpawnList spawnList)
                )
            ))

            (setq god_RemoveFromSpawnList (lambda (pos)
                (block (spawnList)
                    (setq spawnList (dsf_GetScreenState 'GOD_SpawnList (list)))
                    (lnkRemove spawnList pos Nil)
                    (dsf_SetScreenState 'GOD_SpawnList spawnList)
                )
            ))

            (setq god_UpdateSpawnList (lambda (pos key value)
                (block (spawnList data)
                    (setq spawnList (dsf_GetScreenState 'GOD_SpawnList (list)))
                    (setq data (item spawnList pos))
                    (dsf_HashSet data key value)
                    (setq spawnList (lnkReplace spawnList pos data))
                    (dsf_SetScreenState 'GOD_SpawnList spawnList)
                )
            ))

            (setq god_HeadToHeadSpawnList (lambda Nil
                (block (spawnList shipList)
                    (setq shipList (list))
                    (setq spawnList (dsf_GetScreenState 'GOD_SpawnList (list)))
                    (enum spawnList el (block (position cnt team sov)
                        (setq position (dsf_HashGet el 'position))
                        (if (eq position 'random)
                            (setq position (sysVectorRandom gPlayerShip (random 5 20) 1))
                            (block (dist ang)
                                (setq dist (int (subset position 0 (strFind position "/"))))
                                (setq ang  (int (subset position (add (strFind position "/") 1))))
                                (setq position (sysVectorPolarOffset gPlayerShip ang dist))
                            )
                        )
                        (setq cnt (int (dsf_HashGet el 'count)))
                        (setq sov (dsf_HashGet el 'sovereign))
                        (for i 1 cnt (block (ship)
                            (setq ship (sysCreateShip (dsf_HashGet el 'type) position sov))
                            (objSuspend ship)
                            (lnkAppend shipList ship)
                            (shpSetCommandCode ship (block Nil
                                (if (sysFindObject gSource "sTE")
                                    (shpOrder gSource 'attackNearestEnemy)
                                    (block (team)
                                        (shpOrder gSource 'hold)
                                        (setq team (typGetDataField (objGetSovereign gSource) 'name))
                                        (plyMessage gPlayer "Combat is over. The " team " won.")
                                    )
                                )
                            ))
                        ))
                        (enum shipList s (objResume s))
                    ))
                )
            ))
        )
    </Globals>

    <ItemType UNID="&itGOD-DSAdvertiser;"
        name=       "G.O.D DockScreen Advertiser"
        modifiers=  "ScreenHook; TerminalService;"
        virtual=    "True"
        >
        <Image imageID="&rsItems1;" imageX="0" imageY="288" imageWidth="96" imageHeight="96"/>
        <StaticData>
            <HookTitle>"Galactic Omni Device"</HookTitle>
            <HookSubtitle>"\nThe Galactic Omni Device is a one stop shortcut to your development needs."</HookSubtitle>
            <ScreenData>'(god_Screen 'Initial)</ScreenData>
        </StaticData>
    </ItemType>

    <Sovereign UNID="&svGODRed;"
        name="Red Team"
        alignment="neutral"
        >
        <Relationships>
            <Relationship sovereign="&svGODBlue;"  disposition="enemy" mutual="true" />
            <Relationship sovereign="&svGODGreen;" disposition="enemy" mutual="true" />
        </Relationships>
    </Sovereign>

    <Sovereign UNID="&svGODBlue;"
        name="Blue Team"
        alignment="neutral"
        >
        <Relationships>
            <Relationship sovereign="&svGODRed;"   disposition="enemy" mutual="true" />
            <Relationship sovereign="&svGODGreen;" disposition="enemy" mutual="true" />
        </Relationships>
    </Sovereign>

    <Sovereign UNID="&svGODGreen;"
        name="Green Team"
        alignment="neutral"
        >
        <Relationships>
            <Relationship sovereign="&svGODRed;"  disposition="enemy" mutual="true" />
            <Relationship sovereign="&svGODBlue;" disposition="enemy" mutual="true" />
        </Relationships>
    </Sovereign>

</TranscendenceExtension>
<!--
vim:enc=utf-8:nu:ai:si:et:ts=4:sw=4:ft=tscript:
-->
