<?xml version="1.0" ?>
<!DOCTYPE TranscendenceExtension
[
    <!ENTITY modGOD               "0xDCBA0040">
    <!ENTITY itGOD-DSAdvertiser   "0xDCBA0041">
    <!ENTITY stGOD_TimeStop       "0xDCBA0042">
    <!ENTITY itGOD_SlotDevice     "0xDCBA0043">
    <!ENTITY stGOD_HeadToHead     "0xDCBA0044">
]>

<TranscendenceExtension UNID="&modGOD;" version="0.99c">

<!--
    Requires:
        DockScreenFramework
        An implementation of "+TerminalService;"

    Purpose:
        Provide as many developer "shortcuts" as possible.

    CHANGELOG: (current release: 1.4.1)
        VERSION 1.4.1
            --  Works with DSF 2.0
                --  The Advertiser is virtual now
            --  Fix Player Data bug
            --  Fix enhancement bug
        VERSION 1.4
            --  Repair/Damage Devices
            --  Head-to-Head ship fights
            --  Cause Havok is now always available (if enough ships within range)
        VERSION 1.3
            --  Fixed time not restarting propperly after doing a jump
                between systems. THX to Digdug for reporting
        VERSION 1.2
            --  Enhancing installed items, should now actually work
            --  Fixed a bug that caused installed shield to appear
                in the sheidl type browser.
            --  Added time stop feature. It can be disabled by setting
                god_EnableTimeStop to Nil
            --  You can now cycle between next and previous target
                in the Target Service DS.
            --  Spawning enemy ships no longer requires an Exit.
            --  Spawning stations no longer require an Exit.

        VERSION 1.1
            --  Counter screens now start with a default value of 1.
            --  We now Re-Filter without loosing our cursor position
                in CustomPicker screens.
            --  Added Target Services
            --  Provide detailed info about target
            --  Provide means to equip/unequip devices/armor
                for current target
            --  Provide means to send somewhat complex orders to
                targets
            --  Turn target into fleet/auton wingmen
            --  Change name of target
            --  Enhancement Browser
            --  Enhancements can now be browsed and customized and
                then applied to an item.
            --  Completely arbitrary hexcodes can be tested on items.
            --  Enhancements can be analyzed.

    TODO:
        --  Only display items with enhancements in the enhancement analyzer
        --  BUG: Initilize of RepairItem is not run at screen start???
        --  BUG: Repairing of armors crashes the game
        --  Items can be unenhanced by damaging them

        --  Info on target ship, like SOVEREIGN!
        --  Can't gate into Eridani
        --  Repair or damage items
            Damage armor on a screen of it's own
            Deplete sheilds on a screen of it's own
        --  There is still the bug where the DS crashes on certain items
        --  Add "item sets" that the player can preconfigure in a mod, and 
            install through a simple interface.
        --  Rewrite the DockServices screens as DSF screens (not likely)
        --  Add quickAccess to relevant areas
        --  Sorting of the item lists?
        --  Sorting of the Galaxy Travel list (by level perhaps? alphabetical?)
        --  Browse ships by name
        --  Browse stations by name
        --  Use (shpOrder source "wander") for spawning ships and target orders
        --  Banking doesn't work
        --  Implement Mass Actions. (eg. drop shields on all enemies within range.)
        --  Analyze enhancements is still broken. Showing Nil Nil for a particle enhanced shield
        --  When removing items from other ships, make sure to also remove it from cargo hold
        --  Add a action that allows to convert int to hex and reverse?
        --  Show info in hex where applicable
        --  Make all actions in one large customPicker list that is filterable
        --  TimeStop should be refactored into an overlay

    FROM WOLFY
        1) delete target
        2) force install (installs regardless of restrictions) - (easy if it can be done, which I think it can)
        3) install rom menu (basically does the invoke script upon selection of the menu option)
        - (ie, the targeting rom option would install a target program on the ship)
        4) duplicate target
        5) spawn friendly (like neutral, but will attack unfriendlies)
        - that's for the ship spawn options
        6) force replace armor (like force install, but for armor)

    BUGS:
        1) I get these error messages about 200 times total when I load up a system I've been messing around in
        11/26/2009 18:28:11CheckCombat  []: No binding for symbol: god_gTargetShip ### (objGetDistance god_gTargetShip god_gTargetedShip) ###
        11/26/2009 18:30:21CheckCombat  []: No binding for symbol: god_gTargetedShip ### (setq god_gTargetedShip obj) ###
        11/26/2009 18:30:23InitCombat  []: No binding for symbol: god_gTargetedShip ### (setq god_gTargetedShip obj) ###
        11/26/2009 18:28:18OnObjDestroyed  []: No binding for symbol: god_gTargetedShip ### (eq aObjDestroyed god_gTargetedShip) ###
        2) the 'pause' function needs a hot-key for 5 mins
        3) in head-to-head mode, when it's multiple ships vs. 1 (or maybe multiple ships), once the ship that one side intially targets and
        kills, it will just head directly to the gate, even if there are more enemy ships for it to kill
        4) 19:10:00 +Atarlost | Alterecco, There's a problem with the multi-ship head to head:  It starts ships overlapping which leads to fratricide. 

        17:27:42   Atarlost | alterecco, I'm having problems with the godmod replacing starting armor, but only on the sapphire.                                        │
        17:49:54   Atarlost | No, it won't replace it.  It gives an error.  Once you generate something cheap and have it swapped in by a station it works fine though. │

-->

    <ItemType UNID="&itGOD-DSAdvertiser;"
        name=       "G.O.D DockScreen Advertiser"
        frequency=  "notrandom"
        modifiers=  "ScreenHook; TerminalService; CannotOrder; NotForSale;"
        virtual=    "true"
        >
        <Image imageID="&rsItems1;" imageX="0" imageY="288" imageWidth="96" imageHeight="96"/>
        <StaticData>
            <HookTitle>"Galactic Omni Device"</HookTitle>
            <HookSubtitle>"The Galactic Omni Device does it's best to provide you with game spoiling features."</HookSubtitle>
            <ScreenData>'(god_ScreenData 'Initial)</ScreenData>
        </StaticData>
    </ItemType>

    <Globals>
        (block Nil

            (setq god_EnableTimeStop True)

            (setq god_ScreenData (lambda (screen) (block Nil
                ;; it's all one big switch, almost

                (if (and god_EnableTimeStop (not god_TimeStopStation))
                    (block Nil
                        ;; do the timestop
                        (god_TimeStop)
                    )
                )


                (switch

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; INITIAL SCREEN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "Initial")
                        (list
                            'screenName     "G.O.D Services"
                            'paneDesc       "Welcome to Galactic Omni Services. We provide a wide range of services at your fingertips"
                            'screenType     "CustomPicker"
                            'backFunc       '(god_BackAction)
                            'exitFunc       '(god_ExitAction)
                            'customPicker   (list
                                ;;;; SHIP SERVICES
                                (list
                                    'title      "Ship Service"
                                    'subtitle   "Yep, we can do it!"
                                    'paneDesc   '("\n\nIf it needs installing or repairing, come to us." '+)
                                    'actions    (list
                                        (list
                                            'name       '("JustInstall(TM) Device" 'I)
                                            'runFunc    '(god_ScreenData "IndiscriminateInstall")
                                        )
                                        (list
;; REMAKE THIS IN DSF
                                            'name       '("Standard Install Device" 'D)
                                            'nextScreen "&dsInstallDevice;"
                                            'runFunc    '(block Nil
                                                (setq gPrevScreen (dsf_ScreenTypeToUNID 'CustomPicker))
                                                (setq gPrevPane "Default")
                                                (setq dsf_ReturnData (god_ScreenData 'Initial))
                                                (setq gTechLevel 15)
                                                (setq gTechModifier Nil)
                                                (setq gCheckMilitaryID Nil)
                                                (setq gMargin 0)
                                                True
                                            )
                                        )
                                        (list
;; REMAKE THIS IN DSF
                                            'name       '("Remove Device" 'R)
                                            'nextScreen "&dsRemoveDevice;"
                                            'runFunc    '(block Nil
                                                (setq gPrevScreen (dsf_ScreenTypeToUNID 'CustomPicker))
                                                (setq gPrevPane "Default")
                                                (setq dsf_ReturnData (god_ScreenData 'Initial))
                                                (setq gMargin 0)
                                                True
                                            )
                                        )
                                        (list
;; REMAKE THIS A DSF
                                            'name       '("Replace or Repair Armor" 'A)
                                            'nextScreen "&dsRepairArmor;"
                                            'runFunc    '(block Nil
                                                (setq gPrevScreen (dsf_ScreenTypeToUNID 'CustomPicker))
                                                (setq gPrevPane "Default")
                                                (setq dsf_ReturnData (god_ScreenData 'Initial))
                                                (setq gTechLevel 15)
                                                (setq gArmorSegment 0)
                                                (setq gMargin 0)
                                                True
                                            )
                                        )
                                        (list
                                            'name       '("Refuel" 'F)
                                            'runFunc    '(block Nil
                                                (shpRefuelFromItem gPlayerShip (itmCreate &itLongzhuSphere; 2000))
                                                (dsf_BuildPaneDesc "Your Ship has been refueled.\n\n")
                                                (god_ScreenData 'Initial)
                                            )
                                        )
                                    )
                                )
                                ;;;; VT-SHOP
                                (list
                                    'title      "VT-Shop"
                                    'subtitle   "24/7 Virtual Terminal Shop"
                                    'paneDesc   '("\n\nSelect how you would like to conduct your purchase. We offer several, for your convenience." '+)
                                    'actions    (list
                                        (list
                                            'name       '("By Type" 'T)
                                            'runFunc    '(god_ScreenData "VTShop-TypeSelect")
                                        )
                                        (list
                                            'name       '("By Name" 'N)
                                            'runFunc    '(god_ScreenData "VTShop-Name")
                                        )
                                        (list
                                            'name       '("By UNID" 'U)
                                            'runFunc    '(god_ScreenData "VTShop-UNID")
                                        )
                                    )
                                )
                                ;;;; TRAVEL SERVICES
                                (list
                                    'title      "Travel Services"
                                    'subtitle   "Galaxy and System Travel Services"
                                    'paneDesc   '("\n\nTravel to any larger point in-system, or to any solar system in the galaxy" '+)
                                    'actions    (list
                                        (list
                                            'name       '("System Services" 'S)
                                            'runFunc    '(god_ScreenData "TravelServices-System")
                                        )
                                        (list
                                            'name       '("Galaxy Services" 'G)
                                            'runFunc    '(god_ScreenData "TravelServices-Galaxy")
                                        )
                                    )
                                )
                                (list
                                    'title      "Spawn Space Objects"
                                    'subtitle   "Make friends or foes, or just the ice-cream shop"
                                    'paneDesc   '("\n\nSpawn any amount of ships or stations, either by name or UNID" '+)
                                    'actions    (list
                                        (list
                                            'name       '("Ships" 'S)
                                            'runFunc    '(god_ScreenData "Spawn")
                                        )
                                        (list
                                            'name       '("Station By UNID" 'T)
                                            'runFunc    '(god_ScreenData "Spawn-Station")
                                        )
                                    )
                                )
                                (list
                                    'title      "Player Services"
                                    'subtitle   "Nothing naughty going on here!"
                                    'paneDesc   '("\n\nThis includes such niceties as adding money, changing promotion levels, etc." '+)
                                    'actions     (list
                                        (list
                                            'name       '("Select" 'S)
                                            'runFunc    '(god_ScreenData 'PlayerServices)
                                        )
                                    )
                                )
                                (list
                                    'title      "Target Services"
                                    'subtitle   "Various actions to perform on your current target."
                                    'hideList   '(not (objGetTarget gPlayerShip))
                                    'actions    (list
                                        (list
                                            'name       '("Select" 'S)
                                            'runFunc    '(god_ScreenData 'TargetServices)
                                        )
                                    )
                                )
                                (list
                                    'title      "Miscellaneous"
                                    'subtitle   "Various actions that have not been fit into a specific category."
                                    'actions    (list
                                        (list
                                            'name       '("Select" 'S)
                                            'runFunc    '(god_ScreenData 'Miscellaneous)
                                        )
                                    )
                                )
                            ) ;;; CustomPicker End
                        ) ;;; Initial End

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; INDISCRIMINATELY INSTALL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "IndiscriminateInstall")
                        (list
                            'screenName     "JustInstall(TM) Item Installer"
                            'paneDesc       "Pick an item to install."
                            'screenType     "ItemPickerPlayer"
                            'itemFilter     "dUN"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Install this device" 'I)
                                    'runFunc    '(god_JustInstall gPlayerShip (scrGetItem gScreen))
                                    'hideFunc    '(if (not (scrGetItem gScreen)) True)
                                )
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; MISCELLANEOUS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "Miscellaneous")
                        (list
                            'screenName     "Miscellaneous"
                            'paneDesc       "Select action."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'customPicker    (list
                                (list
                                    'title      "Enhancements"
                                    'subtitle   "Mmmhmmm. Enhancements"
                                    'actions    (list
                                        (list
                                            'name       '("Select" 'S)
                                            'runFunc    '(god_ScreenData "Enhancements")
                                        )
                                        (list
                                            'name       '("Analyze Item" 'A)
                                            'runFunc    '(god_ScreenData "Enhancements-Analyze")
                                        )
                                    )
                                )
                                (list
                                    'title      "Repair or Damage Items"
                                    'subtitle   "Broke it? Then fix it! Fixed? Then break it!"
                                    'actions    (list
                                        (list
                                            'name       '("Repair Item" 'R)
                                            'runFunc    '(god_ScreenData "RepairItem")
                                        )
                                        (list
                                            'name       '("Damage Item" 'D)
                                            'runFunc    '(god_ScreenData "DamageItem")
                                        )
                                    )
                                )
                                (list
                                    'title      "Freeze Time"
                                    'subtitle   "Have a break. Have a Trip-Snack"
                                    'hideList   '(dsf_GetScreenState 'timeFrozen)
                                    'actions    (list
                                        (list
                                            'name       '("1 minute" '1)
                                            'runFunc    '(sysStopTime 1800 gPlayerShip)
                                        )
                                        (list
                                            'name       '("5 minutes", '5)
                                            'runFunc    '(sysStopTime 9000 gPlayerShip)
                                        )
                                        (list
                                            'name       '("10 minutes" '0)
                                            'runFunc    '(sysStopTime 18000 gPlayerShip)
                                        )
                                    )
                                )
                                (list
                                    'title          "Cause Havok"
                                    'subtitle       "You just gotta love that title, right! You just gotta know what this does..."
                                    'hideList       '(block (hide cnt)
                                        (setq hide True)
                                        (setq cnt (count (sysFindObject gPlayerShip "sN:200")))
                                        (if (geq cnt 20)
                                            (setq hide Nil)
                                        )
                                        hide
                                    )
                                    'actions            (list
                                        (list
                                            'name       '("OK" 'O)
                                            'runFunc    '(block (lst)
                                                (setq lst (sysFindObject gPlayerShip "sN:200"))
                                                (enum lst obj (block (kill)
                                                    (setq kill (random (sysFindObject obj "sTN:200")))
                                                    (shpCancelOrders obj)
                                                    (shpOrderAttack obj kill)
                                                ))
                                                (plyMessage gPlayer (random '(
                                                    "Transcendence on pills. Woooooooooo"
                                                    "Wrong button dude!  &gt;.&lt;  "
                                                    "THEY'VE GONE NUTS!! ALL OF THEM HAVE GONE COMPLETELY NUTS!"
                                                    "YYYYYYEEEEEEEEEEHHHHHHHHHAAAAAAAAAAAAA!!!!!"
                                                )))
                                                (god_ExitAction)
                                                (dsf_ExitAction)
                                            )
                                        )
                                    )
                                )
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; REPAIR / DAMAGE ITEMS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "RepairItem")
                        (list
                            'screenName         "Repair Items"
                            'paneDesc           "Choose the item you want to repair"
                            'screenType         "ItemPickerPlayer"
                            'initFunc           '(dbgLog "Inited")
                            ;; we only want to show damaged items
                            'itemFilter         (block Nil (lambda (itm) (itmIsDamaged itm)))
                            'exitFunc           '(god_ExitAction)
                            'actions            (list
                                (list
                                    'name       '("Repair" 'R)
                                    'runFunc    '(block (itm)
                                        (setq itm (scrGetItem gScreen))
                                        (if itm (block (installed new)
                                            (setq installed (itmIsInstalled itm))
                                            (setq new (itmSetDamaged itm Nil))
                                            (shpRemoveDevice gPlayerShip itm)
                                            (scrRemoveItem gScreen (itmGetCount itm))
                                            (objAddItem gPlayerShip new)
                                            (if installed (objEnumItems gPlayerShip "*" itm
                                                (if (eq (itmGetUNID itm) (itmGetUNID new))
                                                    (shpInstallDevice gPlayerShip itm)
                                                )
                                            ))
                                            (dsf_BuildPaneDesc "Item repaired. Repair another?.\n\n")
                                        ))
                                        (god_ScreenData "RepairItem")
                                    )
                                )
                            )
                        )

                    (eq screen "DamageItem")
                        (list
                            'screenName         "Damage Items"
                            'paneDesc           "Choose the item you want to damage"
                            'screenType         "ItemPickerPlayer"
                            ;; we only want to show undamaged items
                            'itemFilter         (block Nil (lambda (itm) (not (itmIsDamaged itm))))
                            'exitFunc           '(god_ExitAction)
                            'actions            (list
                                (list
                                    'name       '("Damage" 'D)
                                    'runFunc    '(block (itm)
                                        (setq itm (scrGetItem gScreen))
                                        (if itm (block Nil
                                            (shpDamageItem gPlayerShip itm)
                                            (dsf_BuildPaneDesc "Item damaged. Damage another?.\n\n")
                                        ))
                                        (god_ScreenData "DamageItem")
                                    )
                                )
                            )
                        )
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; ENHANCEMENTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "Enhancements-Custom")
                        (list
                            'screenName         "Custom Enhancement"
                            'paneDesc           "Enter the hexadecimal string you want to test as an enhancement. With or without 0x"
                            'paneType           "TextInput"
                            'exitFunc           '(god_ExitAction)
                            'actions            (list
                                (list
                                    'name       '("Choose Target" 'C)
                                    'runFunc    '(block (hex)
                                        (setq hex (scrGetInputText gScreen))
                                        (setq hex (god_HexToDec hex))
                                        (dsf_SetScreenState 'hex hex)
                                        (god_ScreenData "Enhancements-ChooseTarget")
                                    )
                                )
                            )
                        )

                    (eq screen "Enhancements-SetPower")
                        (list
                            'screenName     "Enhancement Power"
                            'paneDesc       "Choose the strength of the enhancement. Can be a number from 0 to 15."
                            'paneType       "Counter"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Choose Target" 'C)
                                    'runFunc    '(block (num)
                                        (setq num (scrGetCounter gScreen))
                                        (if (and (geq num 0) (leq num 15))
                                            (block (hex)
                                                (setq hex (dsf_RemoveScreenState 'hex))
                                                (setq hex (add hex num))
                                                (dsf_SetScreenState 'hex hex)
                                                (god_ScreenData "Enhancements-ChooseTarget")
                                            )
                                        )
                                    )
                                )
                            )
                        )

                    (eq screen "Enhancements-SetType")
                        (list
                            'screenName     "Enhancement Type"
                            'paneDesc       (cat "Choose the damage type of the enhancement.")
                            'screenType     "CustomPicker"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Choose Power" 'C)
                                    'runFunc    '(block (num hex)
                                        (setq num (dsf_GetListEntryData 'data))
                                        (setq hex (dsf_RemoveScreenState 'hex))
                                        (setq hex (add hex (multiply num 15)))
                                        (dsf_SetScreenState 'hex hex)
                                        (god_ScreenData "Enhancements-SetPower")
                                    )
                                )
                            )
                            'customPicker       (block (lst)
                                (setq lst (list))
                                (for i 0 15
                                    (lnkAppend lst (list
                                        'title      (god_IntToDamageType i)
                                        'data       i
                                    ))
                                )
                                lst
                            )
                        )

                    (eq screen "Enhancements-ChooseTarget")
                        (list
                            'screenName         "Choose Enhancement Target"
                            'paneDesc           (cat "Choose the item to apply enhancement to.")
                            'screenType         "ItemPickerPlayer"
                            'itemFilter         (dsf_RemoveScreenState 'crit)
                            'noSave             True
                            'exitFunc           '(god_ExitAction)
                            'actions            (list
                                (list
                                    'name       '("Apply Enhancement" 'A)
                                    'runFunc    '(block (itm)
                                        (setq itm (scrGetItem gScreen))
                                        (if itm
                                            (block (hex installed pos)
                                                (setq hex (dsf_RemoveScreenState 'hex))
                                                (shpEnhanceItem gPlayerShip itm hex)
                                                (dsf_BuildPaneDesc "Item Enhanced.\n\n")
                                                (god_ScreenData "Enhancements")
                                            )
                                        )
                                    )
                                )
                            )
                        )

                    (eq screen "Enhancements-Analyze")
                        (list
                            'screenName     "Enhancement Information"
                            'paneDesc       (cat "Browse your items, and we will show any enhancement information, if available.")
                            'screenType     "ItemPickerPlayer"
                            'itemFilter     "swa"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'preInitFunc    '(block (imt desc hex)
                                (setq itm (scrGetItem gScreen))
                                (if itm (block Nil
                                    (setq hex (itmIsEnhanced itm))
                                    (if hex (block (enh)
                                        (setq enh (god_IntToEnhancement hex))
                                        (dsf_BuildPaneDesc (list (cat "Type: " (dsf_HashGet enh 'name) ": " (dsf_HashGet enh 'hex) "\n") '+))
                                        (if (eq (dsf_HashGet enh 'type) 2)
                                            (dsf_BuildPaneDesc (list (cat "Damage: " (god_IntToDamageType (modulo (divide hex 16) 16)) "\n") '+))
                                        )
                                        (if (or (eq (dsf_HashGet enh 'type) 2) (eq (dsf_HashGet enh 'type) 1))
                                            (dsf_BuildPaneDesc (list (cat "Strength: " (add (modulo hex 16) 1) "\n") '+))
                                        )
                                        (dsf_BuildPaneDesc '("\n" '+))
                                    ))
                                ))
                            )
                        )

                    (eq screen "Enhancements")
                        (list
                            'screenName     "Browse Enhancements"
                            'paneDesc       "In the hex code, Y stands for damage type, and X for the \"strength\" of the enhancement. Select the enhancement you want to apply, and you will be presented with screens where you can customizee the effect."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Select" 'S)
                                    'runFunc    '(block (hex crit type)
                                        (setq hex (int (dsf_GetListEntryData 'hex)))
                                        (setq crit (dsf_GetListEntryData 'criteria))
                                        (setq type (dsf_GetListEntryData 'type))
                                        (dsf_SetScreenState 'hex hex)
                                        (dsf_SetScreenState 'crit crit)

                                        ;; find the screen to direct to
                                        (switch
                                            (eq type 2)
                                                (god_ScreenData "Enhancements-SetType")
                                            (eq type 1)
                                                (god_ScreenData "Enhancements-SetPower")
                                            (god_ScreenData "Enhancements-ChooseTarget")
                                        )
                                    )
                                )
                                (list
                                    'name       '("Damage Types" 'D)
                                    'runFunc    '(block (str)
                                        (setq str "")
                                        (for i 0 14
                                            (setq str (cat str i ": " (god_IntToDamageType i) ", "))
                                        )
                                        (setq str (cat str "" 15 ": " (god_IntToDamageType 15)))
                                        (dsf_SetPaneDesc str)
                                        Nil
                                    )
                                )
                                (list
                                    'name       '("Enter Custom" 'E)
                                    'runFunc    '(god_ScreenData "Enhancements-Custom")
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                (enum god_EnhancementData enh
                                    (lnkAppend data (list
                                        'title      (cat (dsf_HashGet enh 'name) ": " (dsf_HashGet enh 'hex))
                                        'subtitle   (cat "Applicable for: " (dsf_HashGet enh 'devices) ". " (dsf_HashGet enh 'desc))
                                        'hex        (dsf_HashGet enh 'hex)
                                        'criteria   (dsf_HashGet enh 'criteria)
                                        'type       (dsf_HashGet enh 'type)
                                    ))
                                )
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; TARGET SERVICES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    (eq screen "TargetServices")
                        (list
                            'screenName     "Target Services"
                            'paneDesc       "Choose the action you want to perform on your target."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Select" 'S)
                                    'runFunc    '(god_ScreenData (dsf_GetListEntryData 'dataset))
                                )
                                (list
                                    'name       '("Next Target" 'N)
                                    'runFunc    '(block (lst pos)
                                        (setq lst (dsf_GetScreenState 'TargetList))
                                        (if (not lst) (block Nil
                                            (setq lst (sysFindObject gPlayerShip "Ts N:100"))
                                            (dsf_SetScreenState 'TargetList lst)
                                        ))
                                        (setq pos (find lst (objGetTarget gPlayerShip)))
                                        (setq pos (add pos 1))
                                        (if (eq pos (count lst))
                                            (setq pos 0)
                                        )
                                        (shpOrderAttack gPlayerShip (item lst pos))
                                        (god_ScreenData "TargetServices")
                                    )
                                )
                                (list
                                    'name       '("Previous Target" 'P)
                                    'runFunc    '(block (lst pos)
                                        (setq lst (dsf_GetScreenState 'TargetList))
                                        (if (not lst) (block Nil
                                            (setq lst (sysFindObject gPlayerShip "Ts N:100"))
                                            (dsf_SetScreenState 'TargetList lst)
                                        ))
                                        (setq pos (find lst (objGetTarget gPlayerShip)))
                                        (setq pos (subtract pos 1))
                                        (dbgLog "Count: " (count lst))
                                        (dbgLog "Pos Before: " pos)
                                        (if (ls pos 0)
                                            (setq pos (subtract (count lst) 1))
                                        )
                                        (dbgLog "Pos After: " pos)
                                        (shpOrderAttack gPlayerShip (item lst pos))
                                        (god_ScreenData "TargetServices")
                                    )
                                )
                            )
                            'customPicker    (list
                                (list
                                    'title      "Analyse Target"
                                    'subtitle   "Provide inside information on your current target."
                                    'dataset    "TargetServices-Analyse"
                                )
                                (list
                                    'title      "Customize Target"
                                    'subtitle   "Turn your target into a mindless drone, or a killer bot."
                                    'dataset    "TargetServices-Customize"
                                )
                                (list
                                    'title      "Set as Wingman"
                                    'subtitle   "Turn your current target into a wingman."
                                    'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    'dataset    "TargetServices-Wingman"
                                )
                            )
                        )

                    ;;;;; TARGET SERVICES - WINGMAN
                    (eq screen "TargetServices-Wingman")
                        (list
                            'screenName     "Aquire wingman"
                            'paneDesc       "Select what type of wingman you would like."
                            'actions        (list
                                (list
                                    'name       '("As Fleet" 'F)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpSetController target "fleet")
                                        (shpOrderEscort target gPlayerShip)
                                        (dsf_BuildPaneDesc "Wingman aquired.\n\n")
                                        (god_ScreenData "TargetServices")
                                    )
                                )
                                (list
                                    'name       '("As Auton" 'A)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpSetController target "auton")
                                        (shpOrderEscort target gPlayerShip)
                                        (dsf_BuildPaneDesc "Wingman aquired.\n\n")
                                        (god_ScreenData "TargetServices")
                                    )
                                )
                            )
                        ) ;;; END TARGET SERVICES - WINGMAN

                    ;;;;; TARGET SERVICES - CUSTOMIZE
                    (eq screen "TargetServices-Customize")
                        (list
                            'screenName     "Customize Target"
                            'paneDesc       "Select an option to customize."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Select" 'S)
                                    'runFunc    '(god_ScreenData (dsf_GetListEntryData 'dataset))
                                )
                            )
                            'customPicker    (list
                                (list
                                    'title      "Install Device"
                                    'subtitle   "Install a device from your cargobay."
                                    'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    'dataset    "TargetServices-InstallDevice"
                                )
                                (list
                                    'title      "Remove Device"
                                    'subtitle   "Remove a device installed on you current target."
                                    'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    'actions    (list
                                        (list
                                            'name       '("Select" 'S)
                                            'runFunc    '(block (target uninstalled)
                                                (setq target (objGetTarget gPlayerShip))
                                                ;; here we do something a bit crazy, again
                                                ;; get a list of all items on ship that are not installed
                                                (setq uninstalled (objGetItems gPlayerShip "*U"))
                                                ;; remove all of the uninstalled items
                                                (enum (objGetItems gPlayerShip "*U") itm
                                                    (objRemoveItem gPlayerShip itm)
                                                )
                                                ;; loop over all installed items of the target ship,
                                                ;; and add them to playership
                                                (objEnumItems target "*I~a" itm (block (copy)
                                                    (setq copy (itmCreate (itmGetUNID itm) 1))
                                                    (setq copy (itmSetEnhanced copy (itmIsEnhanced itm)))
                                                    ;; set the item as being known and referenced
                                                    (itmSetReference copy)
                                                    (itmSetKnown copy)
                                                    ;; add the item to playership
                                                    (objAddItem gPlayerShip copy)
                                                ))
                                                ;; store the current uninstalled inventory on the ship
                                                (objSetData gPlayerShip "rdtUninstalled" uninstalled)
                                                ;; build a function that we pass along,
                                                ;; which will restore everything
                                                ;; store the func in the state
                                                (dsf_SetScreenState 'rdtRestore '(block Nil
                                                    ;; get the ships uninstalled contents and remove them
                                                    (enum (objGetItems gPlayerShip "*U") itm
                                                        (objRemoveItem gPlayerShip itm)
                                                    )
                                                    ;; add the uninstalled items
                                                    (enum (objGetData gPlayerShip "rdtUninstalled") itm
                                                        (objAddItem gPlayerShip itm)
                                                    )
                                                    (objSetData gPlayerShip 'rdtUninstalled Nil)
                                                ))
                                                (god_ScreenData "TargetServices-RemoveDevice")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'title      "Replace Armor"
                                    'subtitle   "Install a plate of armor from your cargo hold, on target ship."
                                    'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    'dataset    "TargetServices-BrowseArmor"
                                )
                                (list
                                    'title      "Change Orders"
                                    'subtitle   (cat "Give your current target new orders." (if
                                        (objIsShip (objGetTarget gPlayerShip))
                                        (cat "\n\nCurrent Orders are: " (strCapitalize (shpGetOrder (objGetTarget gPlayerShip))))
                                    ))
                                    'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    'dataset    "TargetServices-ChangeOrders"
                                )
                                (list
                                    'title      "Change Name"
                                    'subtitle   "Change the name of your target."
                                    'dataset    "TargetServices-ChangeName"
                                )
                            )
                        ) ;;; END TARGET SERVICES - CUSTOMIZE

                    ;;;;; TARGET SERVICES - CHANGE NAME
                    (eq screen "TargetServices-ChangeName")
                        (list
                            'screenName     "Change Name"
                            'paneDesc       "What do you want to christen this target."
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Rename" 'R)
                                    'runFunc    '(block (name target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (setq name (scrGetInputText gScreen))
                                        (if (not (eq name ""))
                                            (block Nil
                                                (objSetName target name)
                                                (dsf_BuildPaneDesc "Renamed your target.\n\n")
                                            )
                                                (dsf_BuildPaneDesc "Please choose a suitable name.\n\n")
                                        )
                                        (god_ScreenData "TargetServices-Customize")
                                    )
                                )
                            )
                        )

                    ;;;;; TARGET SERVICES - CHANGE ORDERS
                    (eq screen "TargetServices-ChangeOrders")
                        (list
                            'screenName     "Change Orders"
                            'paneDesc       "What orders do you want to issue to ship."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Order Details" 'O)
                                    'runFunc    '(block Nil
                                        (god_ScreenData (dsf_GetListEntryData 'dataset))
                                    )
                                )
                            )
                            'customPicker       (list
                                (list
                                    'title      "Attack"
                                    'subtitle   "Order ship to attack a target you designate."
                                    'dataset    "TargetServices-OrderAttack"
                                )
                                (list
                                    'title      "Cancel"
                                    'subtitle   "Cancel ships current orders."
                                    'actions    (list
                                        (list
                                            'name       '("Send Order" 'S)
                                            'runFunc    '(block Nil
                                                (shpCancelOrders (objGetTarget gPlayerShip))
                                                (dsf_BuildPaneDesc "Ships orders cancelled.\n\n")
                                                (god_ScreenData "TargetServices-ChangeOrders")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'title      "Orbit"
                                    'subtitle   "Order ship to orbit a target you designate at a certain distace."
                                    'dataset    "TargetServices-OrderOrbit"
                                    'nextScreen "CustomPicker"
                                )
                                (list
                                    'title      "Escort"
                                    'subtitle   "Order ship to escort a target you designate."
                                    'dataset    "TargetServices-OrderEscort"
                                )
                                (list
                                    'title      "Follow"
                                    'subtitle   "Order ship to follow a target you designate."
                                    'dataset    "TargetServices-OrderFollow"
                                )
                                (list
                                    'title      "Gate"
                                    'subtitle   "Order ship to gate."
                                    'actions    (list
                                        (list
                                            'name       '("Send Order" 'S)
                                            'runFunc    '(block Nil
                                                (shpCancelOrders (objGetTarget gPlayerShip))
                                                (shpOrderGate (objGetTarget gPlayerShip))
                                                (dsf_BuildPaneDesc "Ship ordered to gate.\n\n")
                                                (god_ScreenData "TargetServices-ChangeOrders")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'title      "Goto"
                                    'subtitle   "Order ship to goto a position you designate."
                                    'dataset    "TargetServices-OrderGoto"
                                )
                                (list
                                    'title      "Guard"
                                    'subtitle   "Order ship to guard a target you designate."
                                    'dataset    "TargetServices-OrderGuard"
                                    ;'hideList    True
                                )
                                (list
                                    'title      "Hold"
                                    'subtitle   "Order ship to hold position, optionally for a specified amount of time."
                                    'dataset    "TargetServices-OrderHold"
                                )
                                (list
                                    'title      "Dock"
                                    'subtitle   "Order ship to dock with a target you designate."
                                    'dataset    "TargetServices-OrderDock"
                                )
                                (list
                                    'title      "Loot"
                                    'subtitle   "Order ship to loot a target you designate."
                                    'dataset    "TargetServices-OrderLoot"
                                )
                                (list
                                    'title      "Patrol"
                                    'subtitle   "Order ship to patrol around a target you designate."
                                    'dataset    "TargetServices-OrderPatrol"
                                    'nextScreen "CustomPicker"
                                )
                                (list
                                    'title      "Wait"
                                    'subtitle   "Order ship to wait for a specified amount of time."
                                    'dataset    "TargetServices-OrderWait"
                                )
                            )
                        );;; END TARGET SERVICES - CHANGE ORDERS

                    ;;;;; TARGET SERVICES - ORDER ATTACK
                    (eq screen "TargetServices-OrderAttack")
                        (list
                            'screenName     "Order Attack"
                            'paneDesc       "Set what target you want to order the attack on. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpOrderAttack target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to attack!\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Force your current target to attack you."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "sTAN:100") obj
                                    (lnkAppend data (list
                                        'title      (objGetName obj 0)
                                        'data       obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER ATTACK

                    ;;;;; TARGET SERVICES - ORDER Orbit
                    (eq screen "TargetServices-OrderOrbit")
                        (list
                            'screenName     "Order Orbit"
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(block (state)
                                (setq state (dsf_GetScreenState 'orbitState))
                                (switch
                                    (eq state Nil)
                                        (dsf_BuildPaneDesc "Set the target the ship should orbit.")
                                    (eq state 1)
                                        (dsf_BuildPaneDesc (cat "Set the time the target should orbit.\n0 is forever.\n"))
                                    (eq state 2)
                                        (dsf_BuildPaneDesc (cat "Set the distance from target to orbit.\n"
                                                              "Target: " (dsf_GetScreenState 'orbitTargetName) "\n"
                                        ))
                                )
                            )
                            'actions        (list
                                (list
                                    'name       '("Set Target" 'S)
                                    'hideFunc   '(not (eq (dsf_GetScreenState 'orbitState) Nil))
                                    'nextPane   "Counter"
                                    'runFunc    '(block Nil
                                        (dsf_SetScreenState 'orbitTarget (dsf_GetListEntryData 'data))
                                        (dsf_SetScreenState 'orbitTargetName (dsf_GetListEntryData 'title))
                                        (dsf_SetScreenState 'orbitState 1)
                                        (god_ScreenData "TargetServices-OrderOrbit")
                                    )
                                )
                                (list
                                    'name       '("Set Time" 'S)
                                    'hideFunc   '(not (eq (dsf_GetScreenState 'orbitState) 1))
                                    'nextPane   "Counter"
                                    'runFunc    '(block (time)
                                        (setq time (scrGetCounter gScreen))
                                        (if (eq time 0) (setq time Nil))
                                        (dsf_SetScreenState 'orbitTime time)
                                        (dsf_SetScreenState 'orbitState 2)
                                        (god_ScreenData "TargetServices-OrderOrbit")
                                    )
                                )
                                (list
                                    'name       '("Send Order" 'S)
                                    'hideFunc   '(not (eq (dsf_GetScreenState 'orbitState) 2))
                                    'runFunc    '(block Nil
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpOrder target 'orbit
                                            (dsf_GetScreenState 'orbitTarget)
                                            (scrGetCounter gScreen)
                                            (dsf_GetScreenState 'orbitTime)
                                        )
                                        (dsf_RemoveScreenState 'orbitState)
                                        (dsf_RemoveScreenState 'orbitTarget)
                                        (dsf_RemoveScreenState 'orbitTargetName)
                                        (dsf_RemoveScreenState 'orbitTime)
                                        (dsf_BuildPaneDesc "Ship ordered to orbit!\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Order target to orbit your ship."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "sTN:100") obj
                                    (lnkAppend data (list
                                        'title      (objGetName obj 0)
                                        'data       obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER ORBIT

                    ;;;;; TARGET SERVICES - ORDER ESCORT
                    (eq screen "TargetServices-OrderEscort")
                        (list
                            'screenName     "Order Escort"
                            'paneDesc       "Set what target you want to order the ship to escort. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpSetController target "fleet")
                                        (shpOrderEscort target (dsf_GetListEntryData 'data) (random 10 30))

                                        (dsf_BuildPaneDesc "Ship ordered to escort.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Force your current target to escort you."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "sN:100") obj
                                    (lnkAppend data (list
                                        'title       (objGetName obj 0)
                                        'data        obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER ESCORT

                    ;;;;; TARGET SERVICES - ORDER FOLLOW
                    (eq screen "TargetServices-OrderFollow")
                        (list
                            'screenName     "Order Follow"
                            'paneDesc       "Set what target you want to order the ship to follow. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpOrderFollow target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to follow.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Force your current target to follow you."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "sN:100") obj
                                    (lnkAppend data (list
                                        'title       (objGetName obj 0)
                                        'data        obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER FOLLOW

                    ;;;;; TARGET SERVICES - ORDER GOTO
                    (eq screen "TargetServices-OrderGoto")
                        (list
                            'screenName     "Order Goto"
                            'paneDesc       "Set what target you want to order the ship to goto. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpOrderGoto target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to goto.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Order the ship to goto your position."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "stN:100") obj
                                    (lnkAppend data (list
                                        'title       (objGetName obj 0)
                                        'data        obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER GOTO

                    ;;;;; TARGET SERVICES - ORDER GUARD
                    (eq screen "TargetServices-OrderGuard")
                        (list
                            'screenName     "Order Guard"
                            'paneDesc       "Set what target you want to order the ship to guard. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (shpOrderEscort target base)
                                        (shpOrderGuard target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to guard\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "tN:100") obj
                                    (lnkAppend data (list
                                        'title      (objGetName obj 0)
                                        'data       obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER GUARD

                    ;;;;; TARGET SERVICES - ORDER HOLD
                    (eq screen "TargetServices-OrderHold")
                        (list
                            'screenName     "Order Hold"
                            'paneDesc       "Set the ship to hold it's current position. Optionally set for how long the ship should hold."
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target time)
                                        (setq time (scrGetCounter gScreen))
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (shpOrderHold target time)

                                        (dsf_BuildPaneDesc "Ship ordered to hold.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                                (list
                                    'name       '("Specify Time" 'T)
                                    'runFunc    '(scrShowPane gScreen "Counter")
                                )
                            )
                        ) ;;; END TARGET SERVICES - ORDER HOLD

                    ;;;;; TARGET SERVICES - ORDER DOCK
                    (eq screen "TargetServices-OrderDock")
                        (list
                            'screenName     "Order Dock"
                            'paneDesc       "Set what target you want to order the ship to dock with. (Within a 100 ls radius)"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (shpOrderDock target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to dock.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "TN:100") obj
                                    (lnkAppend data (list
                                        'title  (objGetName obj 0)
                                        'data    obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER DOCK

                    ;;;;; TARGET SERVICES - ORDER LOOT
                    (eq screen "TargetServices-OrderLoot")
                        (list
                            'screenName     "Order Loot"
                            'paneDesc       "Set what target you want to order the ship to loot."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target)
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (shpOrderLoot target (dsf_GetListEntryData 'data))

                                        (dsf_BuildPaneDesc "Ship ordered to loot.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "t") obj
                                    (if (or (eq (objGetVisibleDamage obj) 100) (strFind (objGetname obj) "wreck"))
                                        (lnkAppend data (list
                                            'title  (objGetName obj 0)
                                            'data   obj
                                        ))
                                    )
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER DOCK

                    ;;;;; TARGET SERVICES - ORDER WAIT
                    (eq screen "TargetServices-OrderWait")
                        (list
                            'screenName     "Order Wait"
                            'paneDesc       "Set the ship to wait where it is for a specified amount of time (in seconds)."
                            'paneType       "Counter"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Send Order" 'S)
                                    'runFunc    '(block (target time)
                                        (setq time (scrGetCounter gScreen))
                                        (if (not time)
                                            (setq time 10)
                                        )
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (shpOrderHold target time)

                                        (dsf_BuildPaneDesc "Ship ordered to wait.\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                        ) ;;; END TARGET SERVICES - ORDER HOLD

                    ;;;;; TARGET SERVICES - ORDER PATROL
                    (eq screen "TargetServices-OrderPatrol")
                        (list
                            'screenName     "Order Patrol"
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(block (state)
                                (setq state (dsf_GetScreenState 'patrolState))
                                (switch
                                    (eq state Nil)
                                        (dsf_SetPaneDesc "Set the origin that will be the center from which the ship will patrol.")
                                    (eq state 1)
                                        (dsf_SetPaneDesc (cat     "Set the distance from the origin in ls target will patrol.\n"
                                                                "Origin: " (dsf_GetScreenState 'patrolOriginName) "\n"
                                        ))
                                )
                            )
                            'actions        (list
                                (list
                                    'name       '("Set Origin" 'S)
                                    'hideFunc   '(not (eq (dsf_GetScreenState 'patrolState) Nil))
                                    'nextPane   "Counter"
                                    'runFunc    '(block Nil
                                        (dsf_SetScreenState 'patrolOrigin (dsf_GetListEntryData 'data))
                                        (dsf_SetScreenState 'patrolOriginName (dsf_GetListEntryData 'title))
                                        (dsf_SetScreenState 'patrolState 1)
                                        (god_ScreenData "TargetServices-OrderPatrol")
                                    )
                                )
                                (list
                                    'name       '("Send Orders" 'S)
                                    'hideFunc   '(not (eq (dsf_GetScreenState 'patrolState) 1))
                                    'runFunc    '(block Nil
                                        (setq target (objGetTarget gPlayerShip))
                                        (shpCancelOrders target)
                                        (objSetSovereign target &svIndependent;)
                                        (shpOrderPatrol target
                                            (dsf_GetScreenState 'patrolOrigin)
                                            (scrGetCounter gScreen)
                                        )
                                        (dsf_RemoveScreenState 'patrolState)
                                        (dsf_RemoveScreenState 'patrolOriginName)
                                        (dsf_BuildPaneDesc "Ship ordered to patrol!\n\n")
                                        (god_ScreenData "TargetServices-ChangeOrders")
                                    )
                                )
                            )
                            'customPicker    (block (data)
                                (setq data (list))
                                ;; start with the player
                                (lnkAppend data (list
                                    'title      "Player"
                                    'subtitle   "Place the origin at your current position."
                                    'data       gPlayerShip
                                ))
                                ;; stay within a certain distance
                                (enum (sysFindObject gPlayerShip "sTN:100") obj
                                    (lnkAppend data (list
                                        'title      (objGetName obj 0)
                                        'data       obj
                                    ))
                                )
                                data
                            )
                        ) ;;; END TARGET SERVICES - ORDER PATROL

                    ;;;;; TARGET SERVICES - BROWSE ARMOR
                    (eq screen "TargetServices-BrowseArmor")
                        (list
                            'screenName     "Choose Armor Plate"
                            'paneDesc       "Select which armor plate you want to replace."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Replace" 'R)
                                    'runFunc    '(block Nil
                                        (dsf_SetScreenState 'armorLocation (dsf_GetListEntryData 'location))
                                        (god_ScreenData "TargetServices-ReplaceArmor")
                                    )
                                )
                            )
                            'customPicker    (block (displayList target armCount)
                                (setq target (objGetTarget gPlayerShip))
                                (setq displayList (list))
                                (setq armCount (shpGetArmorCount target))
                                (for i 0 (subtract armCount 1) (block (arm typ)
                                    (setq arm (shpGetArmor target i))
                                    (setq typ (itmGetArmorType arm))
                                    (lnkAppend displayList (list
                                        'title      (armGetName typ)
                                        'subtitle   (cat "Level: " (itmGetLevel arm) " -- " (armGetHitPoints typ) " hp")
                                        'image      (itmGetImageDesc arm)
                                        'location   i
                                    ))
                                ))
                                displayList
                            )
                        ) ;;; END TARGET SERVICES - BROWSE ARMOR

                    ;;;;; TARGET SERVICES - REPLACE ARMOR
                    (eq screen "TargetServices-ReplaceArmor")
                        (list
                            'screenName     "Replace Armor on Target"
                            'paneDesc       "Select a piece of armor to install."
                            'screenType     "ItemPickerPlayer"
                            'itemFilter     "aU"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Replace Armor" 'R)
                                    'runFunc    '(block (target arm can install tItem)
                                        (setq install Nil)
                                        (setq arm (scrGetItem gScreen))
                                        (setq target (objGetTarget gPlayerShip))
                                        (setq can (shpCanInstallArmor target arm))
                                        (switch
                                            (eq can 1) (dsf_BuildPaneDesc "Armor is too heavy for target ship.\n\n")
                                            (not (eq can 0)) (dsf_BuildPaneDesc "Armor cannot be installed.\n\n")
                                            (eq can 0) (setq install True)
                                        )
                                        (if install (block Nil
                                            (objAddItem target arm)
                                            (shpInstallArmor target arm (dsf_RemoveScreenState 'armorLocation))
                                            (scrRemoveItem gScreen 1)
                                            (dsf_BuildPaneDesc "Armor installed on target ship.\n\n")
                                        ))
                                        (god_ScreenData "TargetServices-BrowseArmor")
                                    )
                                    'hideFunc    '(if (not (scrGetItem gScreen)) True)
                                )
                            )
                        ) ;;; END TARGET SERVICES - REPLACE ARMOR

                    ;;;;; TARGET SERVICES - REMOVE DEVICE
                    (eq screen "TargetServices-RemoveDevice")
                        (list
                            'screenName     "Remove Devices from a Target"
                            'paneDesc       "Select a device to remove."
                            'screenType     "ItemPickerPlayer"
                            'exitFunc       '(block Nil
                                (dsf_DoFunc (dsf_RemoveScreenState 'rdtRestore))
                                (god_ExitAction)
                            )
                            'backFunc       '(dsf_DoFunc (dsf_RemoveScreenState 'rdtRestore))
                            'noSave         True
                            'itemFilter     "*U"
                            'actions        (list
                                (list
                                    'name       '("Remove Device" 'R)
                                    'runFunc    '(block (itm enh target)
                                        (setq target (objGetTarget gPlayerShip))
                                        ;; get the item we want to remove
                                        (setq itm (scrGetItem gScreen))
                                        ;; get any enhancements on it
                                        (setq enh (itmIsEnhanced itm))
                                        ;; make itm into a UNID
                                        (setq itm (itmGetUNID itm))
                                        ;; enum through targets installed items
                                        ;; when we find a match, remove it
                                        (objEnumItems target "*I" rItem
                                            (if (and (eq itm (itmGetUNID rItem)) (eq enh (itmIsEnhanced rItem)))
                                                (block Nil
                                                    (shpRemoveDevice target rItem)
                                                    (scrRemoveItem gScreen 1)
                                                    (dsf_BuildPaneDesc "Removed Item from target ship.\n\n")
                                                )
                                            )
                                        )
                                        (god_ScreenData "TargetServices-RemoveDevice")
                                    )
                                    'hideFunc    '(if (not (scrGetItem gScreen)) True)
                                )
                            )
                        ) ;;; END TARGET SERVICES - REMOVE DEVICE

                    ;;;;; TARGET SERVICES - INSTALL DEVICE
                    (eq screen "TargetServices-InstallDevice")
                        (list
                            'screenName     "Install Device on Target"
                            'paneDesc       "Select a device to install."
                            'screenType     "ItemPickerPlayer"
                            'itemFilter     "dUN"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Install Device" 'I)
                                    'runFunc    '(block (target itm can install tItem)
                                        (setq install Nil)
                                        (setq itm (scrGetItem gScreen))
                                        (setq target (objGetTarget gPlayerShip))
                                        (setq can (shpCanInstallDevice target itm))
                                        (switch
                                            (find '(2 4 5 6 8 9 12 13) can)
                                                (block (gory)
                                                    ;; remove a device of the type we want to install
                                                    (setq gory (itmGetCategory itm))
                                                    (setq gory (switch
                                                        (or (eq gory 0x4) (eq gory 0x10))
                                                            "wI"
                                                        (or (eq gory 0x80) (eq gory 0x40) (eq gory 0x1000) (eq gory 0x800))
                                                            "d~wI"
                                                        "*I"
                                                    ))
                                                    (setq rItem (item (objGetItems target gory) 0))
                                                    (if (shpRemoveDevice target rItem)
                                                        ;; if we successfully made space, then we want to install
                                                        (setq install True)
                                                        (dsf_BuildPaneDesc "There seems to have occured an error. Remove a device from target ship, and try again.\n\n")
                                                    )
                                                )
                                            (find '(7) can)
                                                (dsf_BuildPaneDesc "Target ships reactor not powerful enough.\n\n")
                                            (find '(10) can)
                                                (dsf_BuildPaneDesc "Target ship cannot install a cargo expansion that large.\n\n")
                                            (find '(11) can)
                                                (dsf_BuildPaneDesc "Target ship cannot install an item with so high a power output.\n\n")
                                            (find '(0) can)
                                                (setq install True)
                                        )
                                        (if install (block Nil
                                            (objAddItem target itm)
                                            (shpInstallDevice target itm)
                                            (scrRemoveItem gScreen 1)
                                            (dsf_BuildPaneDesc "Device installed on target ship.\n\n")
                                        ))
                                        (god_ScreenData "TargetServices-InstallDevice")
                                    )
                                    'hideFunc    '(if (not (scrGetItem gScreen)) True)
                                )
                            )
                        ) ;;; END TARGET SERVICES - INSTALL DEVICE

                    ;;;;; TARGET SERVICES - ANALYSE
                    (eq screen "TargetServices-Analyse")
                        (list
                            'screenName     "Analyze Target"
                            'paneDesc       "This is an overview of different attributes of your target. Some of them are based of current data, some of them on data specific to the ship's class."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'customPicker    (block (target displayList)
                                (setq target (objGetTarget gPlayerShip))
                                (setq displayList (list
                                    (list 'title    (cat "Name: " (objGetName target)))
                                    (list 'title    (cat "Level: " (objGetLevel target)))
                                    (list 'title    (cat "Max Power: " (objGetMaxPower target)))
                                    (list 'title    (cat "Can Attack: " (objCanAttack target)))
                                    (list 'title    (cat "Combat Power: " (objGetCombatPower target)))
                                    (list
                                        'title      (cat "Mass: " (objGetMass target))
                                        'subtitle   "Tons"
                                    )
                                    (list
                                        'title      (cat
                                            "Damage Type: ( "
                                            (objGetDamageType target) " ) "
                                            (god_IntToDamageType (objGetDamageType target))
                                        )
                                        'hideList   '(eq (objGetDamageType (objGetTarget gPlayerShip)) -1)
                                    )
                                    (list
                                        'title      (cat "Cargo Space Left: " (intMassString (objGetCargoSpaceLeft target)))
                                    )
                                    (list
                                        'title      (cat "Max Speed: " (shpGetMaxSpeed target))
                                        'subtitle   "In percentage of lightspeed."
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Score: " (shpGetDataField target "score"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Manufacturer: " (shpGetDataField target "manufacturer"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Thrust-To-Weight Ratio: " (shpGetDataField target "thrustToWeight"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Maneuver: " (shpGetDataField target "maneuver"))
                                        'subtitle   "Divide this number by 1000 to get the time it takes for a complete rotation."
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Fire Accuracy: " (shpGetDataField target "fireAccuracy"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Fire Range Adjustment: " (shpGetDataField target "fireRangeAdj"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Fire Rate Adjustment: " (shpGetDataField target "fireRateAdj"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Shield: " (shpGetDataField target "shield"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Shield Max HP: " (shpGetShieldMaxHitPoints target))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Shield Damage: " (shpGetShieldDamage target))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Primary Weapon: " (shpGetDataField target "primaryWeapon"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Primary Weapon Range: " (shpGetDataField target "primaryWeaponRange"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Primary Weapon Range Adjustion: " (shpGetDataField target "primaryWeaponRangeAdj"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Primary Launcher: " (shpGetDataField target "launcher"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Primary Armor: " (shpGetDataField target "primaryArmor"))
                                        'hideList   '(not (objIsShip (objGetTarget gPlayerShip)))
                                    )
                                    (list
                                        'title      (cat "Balance (credits): " (objGetBalance target))
                                        'hideList   '(objIsShip (objGetTarget gPlayerShip))
                                    )

                                ))
                                displayList
                            )
                        ) ;;; END TARGET SERVICES - ANALYSE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; VT SHOP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    ;;;;; VT-SHOP BY NAME
                    (eq screen "VTShop-Name")
                        (list
                            'screenName     "VT-Shop: By Name"
                            'paneDesc       "Enter the name of the item you want to shop for, and we will see if we can find it in our stock."
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(block (input)
                                ;; if we have a 'vtNameSearch in the state, remove it and set the text input
                                (setq input (dsf_RemoveScreenState 'vtNameSearch))
                                (if input
                                    (scrSetInputText gScreen input)
                                )
                            )
                            'actions        (list
                                (list
                                    'name       '("Search" 'S)
                                    'runFunc    '(block (itm)
                                        (setq itm (itmCreateByName "*" (scrGetInputText gScreen) 1))
                                        ;; if we have an item, show the item counter screen, else
                                        ;; show an error, and display the input text again.
                                        (if itm
                                            (block Nil
                                                ;; it's good to know the item
                                                (itmSetKnown itm)
                                                (itmHasReference itm)
                                                ;; store the item in the state
                                                (dsf_SetScreenState 'vtItem itm)
                                                (god_ScreenData "VTShop-Counter")
                                            )
                                            (block (input)
                                                ;; store the current input text in the state.
                                                (dsf_SetScreenState 'vtNameSearch (scrGetInputText gScreen))
                                                ;; build a message that this was an error
                                                (dsf_BuildPaneDesc (cat "We could not find an item matching the name \"" (scrGetInputText gScreen) "\".\n\n"))
                                                ;; show the same screen again
                                                (god_ScreenData "VTShop-Name")
                                            )
                                        )
                                    )
                                )
                            )
                        ) ;;; END BY NAME SHOP

                    ;;;;; VT-SHOP - UNID SELECT
                    (eq screen "VTShop-UNID")
                        (list
                            'screenName     "VT-Shop: By UNID"
                            'paneDesc       "Enter the UNID of the item you want, and we will see if you entered something that makes sense."
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(block (input)
                                ;; if we have a 'vtUNIDSearch in the state, remove it and set the text input
                                (setq input (dsf_RemoveScreenState 'vtUNIDSearch))
                                (if input
                                    (scrSetInputText gScreen input)
                                )
                            )
                            'actions        (list
                                (list
                                    'name       '("Search" 'S)
                                    'runFunc    '(block (hex itm)
                                        ;; convert the string to a integer
                                        (setq hex (god_HexToDec (scrGetInputText gScreen)))
                                        ;; check if trying to create the item throws an error
                                        (setq itm (not (isError (itmCreate hex 1))))
                                        ;; if we have an item, show the item counter screen, else
                                        ;; show an error, and display the input text again.
                                        (if itm
                                            (block Nil
                                                ;; create the item
                                                (setq itm (itmCreate hex 1))
                                                ;; set the item as known
                                                (itmSetKnown itm)
                                                (itmHasReference itm)
                                                ;; store the item in the state
                                                (dsf_SetScreenState 'vtItem itm)
                                                (god_ScreenData "VTShop-Counter")
                                            )
                                            (block Nil
                                                ;; store the current input text in the state.
                                                (dsf_SetScreenState 'vtUNIDSearch (scrGetInputText gScreen))
                                                ;; build a message that this was an error
                                                (dsf_BuildPaneDesc (cat "That was gobbledygook. Try some other random UNID.\n\n"))
                                                ;; show the same screen again
                                                (god_ScreenData "VTShop-UNID")
                                            )
                                        )

                                    )
                                )
                            )
                        ) ;;; END UNID SHOP

                    ;;;;; VT-SHOP - TYPE SELECT
                    ;; Possibly write the players inventory to the ship.
                    ;; if we should crash, provide a DS option to restore items
                    (eq screen "VTShop-TypeSelect")
                        (list
                            'screenName     "VT-Shop: By Type"
                            'paneDesc       "Select the category of items you would like to browse"
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Select" 'S)
                                    'runFunc    '(block (uninstalled category vtRestore)
                                        (setq category (dsf_GetListEntryData 'category))
                                        ;; here we do something a bit crazy
                                        ;; get a list of all items on ship that are not installed
                                        (setq uninstalled (objGetItems gPlayerShip "*U"))
                                        ;; remove all of the uninstalled items
                                        (enum (objGetItems gPlayerShip "*U") itm
                                            (objRemoveItem gPlayerShip itm)
                                        )
                                        ;; loop over all items of the category we want to view
                                        (itmEnumTypes category itm
                                            (block Nil
                                                ;; set the item as being known and referenced
                                                (itmSetReference itm)
                                                (itmSetKnown itm)
                                                ;; add the item to ship
                                                (objAddItem gPlayerShip itm)
                                            )
                                        )
                                        ;; store the current uninstalled inventory on the ship
                                        (objSetData gPlayerShip "vtUninstalled" uninstalled)
                                        ;; build a function that we pass along,
                                        ;; which will restore everything
                                        (setq vtRestore '(block Nil
                                            ;; get the ships uninstalled contents and remove them
                                            (enum (objGetItems gPlayerShip "*U") itm
                                                (objRemoveItem gPlayerShip itm)
                                            )
                                            ;; add the uninstalled items
                                            (enum (objGetData gPlayerShip "vtUninstalled") itm
                                                (objAddItem gPlayerShip itm)
                                            )
                                            (objSetData gPlayerShip 'vtUninstalled Nil)
                                            ;; just incase we do some cleaning here also
                                            (dsf_RemoveScreenState 'vtCategory)
                                            (dsf_RemoveScreenState 'vtFilter)
                                        ))
                                        ;; store the func in the state
                                        (dsf_SetScreenState 'vtRestore vtRestore)
                                        ;; store the category and title in the state
                                        (dsf_SetScreenState 'vtCategory category)
                                        (dsf_SetScreenState 'vtType (dsf_GetListEntryData 'subtitle))
                                        (god_ScreenData "VTShop-Type")
                                    )
                                )
                            )
                            'customPicker    (list
                                '('title "All Items" 'subtitle "Browse All Items" 'category "*U -unknown")
                                '('title "Weapons" 'subtitle "Browse Weapons" 'category "wU")
                                '('title "Armors" 'subtitle "Browse Armors" 'category "aU")
                                '('title "Shields" 'subtitle "Browse Shields" 'category "sU")
                                '('title "Reactors" 'subtitle "Browse Reactors" 'category "rU")
                                '('title "Drives" 'subtitle "Browse Drives" 'category "vU")
                                '('title "Missiles" 'subtitle "Browse Missiles" 'category "mU")
                                '('title "Usable Items" 'subtitle "Browse Usable Items" 'category "uU -unknown;")
                                '('title "Fuel" 'subtitle "Browse Fuel" 'category 'f)
                                '('title "Miscellaneous Items" 'subtitle "Browse Miscellaneous Items" 'category "tU -unknown")
                            )
                        ) ;;; END VT-SHOP - TYPE SELECT

                    ;;;;; VT-SHOP - TYPE BROWSER - ITS KICKASS!!!
                    (eq screen "VTShop-Type")
                        ;; we want complete control over all actions here, since we are
                        ;; in control of all the players belongings
                        (list
                            'screenName     (dsf_GetScreenState 'vtType)
                            'paneDesc       "Browse the list. Use the Filter/Select button to limit the view. Re-Filter to run a filter on current set. Reset to, well, reset!"
                            'screenType     "ItemPickerPlayer"
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(block Nil
                                (dsf_DoFunc (dsf_RemoveScreenState 'vtRestore))
                                (god_ExitAction)
                            )
                            'backFunc       '(dsf_DoFunc (dsf_RemoveScreenState 'vtRestore))
                            'itemFilter     (dsf_GetScreenState 'vtCategory)
                            'actions        (list
                                (list
                                    'name       '("Filter/Select" 'F)
                                    'runFunc    '(block (input prevInput)
                                        ;; if the filter text matches a stored one or is Nil, then
                                        ;; it means we want to do a enter
                                        (setq input (scrGetInputText gScreen))
                                        (setq prevInput (dsf_RemoveScreenState 'vtFilter))
                                        (if (or (eq input prevInput) (eq input Nil) (eq input ""))
                                            (block (itm)
                                                ;; get the current item and put it in the state
                                                (dsf_SetScreenState 'vtItem (scrGetItem gScreen))
                                                ;; remember to clean up
                                                (dsf_RemoveScreenState 'vtType)
                                                (dsf_DoFunc (dsf_RemoveScreenState 'vtRestore))
                                                ;; and go to a count screen
                                                (god_ScreenData "VTShop-Counter")
                                            )
                                            (block (addList)
                                                ;; this is going to be a bit nasty...
                                                ;; we need to remove all uninstalled items
                                                ;; and then add only the ones matching
                                                ;; the filter. then the screen must be re-displayed.
                                                (setq addList (list))
                                                ;; loop over all items of the current category
                                                (itmEnumTypes (dsf_GetScreenState 'vtCategory) itm
                                                    ;; run a filter for the input text, and add to list
                                                    (if (strFind (itmGetName itm 1) input)
                                                        (lnkAppend addList itm)
                                                    )
                                                )
                                                ;; get the ships uninstalled items and remove them
                                                (enum (objGetItems gPlayerShip "*U") itm
                                                    (objRemoveItem gPlayerShip itm)
                                                )
                                                ;; add the new list
                                                (enum addList itm
                                                    (objAddItem gPlayerShip itm)
                                                )
                                                (dsf_BuildPaneDesc (cat "Filtering Data By: " input ".\n\n"))
                                                ;; store the input string
                                                (dsf_SetScreenState 'vtFilter input)
                                                ;; re-display this screen
                                                (god_ScreenData "VTShop-Type")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'name       '("Re-Filter" 'R)
                                    'runFunc    '(block Nil
                                        ;; show the text pane again.
                                        (scrShowPane gScreen "TextInput")
                                    )
                                )
                                (list
                                    'name       '("Reset" 'T)
                                    'runFunc    '(block Nil
                                        ;; ignoring all filters, show this category as a base
                                        ;; remove all items
                                        (enum (objGetItems gPlayerShip "*U") itm
                                            (objRemoveItem gPlayerShip itm)
                                        )
                                        ;; add the new list
                                        (itmEnumTypes (dsf_GetScreenState 'vtCategory) itm
                                            (objAddItem gPlayerShip itm)
                                        )
                                        (god_ScreenData "VTShop-Type")
                                    )
                                )
                                (list
                                    'name       '("JustInstall(TM)" 'I)
                                    'runFunc    '(god_JustInstall gPlayerShip (scrGetItem gScreen))
                                    'hideFunc    '(if (not (scrGetItem gScreen)) True)
                                )
                                (list
                                    'name       '("Debug Output" 'D)
                                    'runFunc    '(block (itm)
                                        (setq itm (scrGetItem gScreen))
                                        (dbgOutput (cat "Item Name: " (itmGetName itm 1)))
                                        (dbgOutput (cat "Item UNID: " (itmGetUNID itm)))
                                        (dbgOutput (cat "Item Level: " (itmGetLevel itm)))
                                        (dbgOutput (cat "Item Frequency: " (itmGetFrequency itm)))
                                        (dbgOutput (cat "Actual Price: " (itmGetPrice itm)))
                                        (dbgOutput (cat "Category: " (itmGetCategory itm)))
                                        (if (or (eq (itmGetCategory itm) 4) (eq (itmGetCategory itm) 1024))
                                            (dbgOutput (cat "Damage Type: " (itmGetDamageType itm))))
                                        (if (eq (itmGetCategory itm) 2)
                                            (dbgOutput (cat "Armor Type: " (itmGetArmorType itm))))
                                        (setq tItem itm)
                                        (dbgOutput "You now have this item available in the variable tItem")
                                        (scrSetDesc gScreen "Boom! You have been debugged!. Move along!")
                                        Nil
                                    )
                                )
                            )
                        ) ;;; END VT-SHOP - TYPE BROWSER

                    ;;;;; VT-SHOP - COUNTER
                    (eq screen "VTShop-Counter")
                        (list
                            'screenName     "VT-Shop: Select Amount"
                            'paneDesc       (cat "Enter the number of \"" (itmGetName (dsf_GetScreenState 'vtItem) 2) "\" you want to create.")
                            'paneType       "Counter"
                            'backFunc       '(dsf_RemoveScreenState 'vtItem)
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(scrSetCounter gScreen 1)
                            'actions        (list
                                (list
                                    'name       '("Create" 'C)
                                    'noSave     True
                                    'runFunc    '(block (cnt)
                                        (setq cnt (scrGetCounter gScreen))
                                        (objAddItem gPlayerShip (dsf_GetScreenState 'vtItem) cnt)
                                        (dsf_BuildPaneDesc "Your order has been delivered.\n\n")
                                        (god_ScreenData "VTShop-Counter")
                                    )
                                )
                            )
                        )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; TRAVEL SERVICES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    ;;;;; TRAVEL SERVICES - SYSTEM
                    (eq screen "TravelServices-System")
                        (list
                            'screenName     "System Travel Services"
                            'paneDesc       "Welcome to our Domestic Travel Service. Please choose your in-system destination."
                            'screenType     "CustomPicker"
                            'paneType       "TextInput"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Filter/Jump" 'J)
                                    'runFunc    '(block (input prevInput)
                                        ;; if the filter text matches a stored one or is Nil, then
                                        ;; it means we want to do a enter
                                        (setq input (scrGetInputText gScreen))
                                        (setq prevInput (dsf_RemoveScreenState 'tsFilter))
                                        (if (or (eq input prevInput) (eq input Nil) (eq input ""))
                                            (block Nil
                                                ;; do the jump
                                                (god_ExitAction)
                                                (objJumpTo gPlayerShip (dsf_GetListEntryData 'pos))
                                                (dsf_ExitAction)
                                            )
                                            (block Nil
                                                ;; set the filter and redisplay
                                                (dsf_SetScreenState 'tsFilter input)
                                                (dsf_BuildPaneDesc (cat "Filtering Data By: " input ".\n\n"))
                                                (god_ScreenData "TravelServices-System")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'name       '("Reset" 'R)
                                    'runFunc    '(block Nil
                                        ;; re-display the screen so we can run a filter again
                                        (dsf_RemoveScreenState 'tsFilter)
                                        (god_ScreenData "TravelServices-System")
                                    )
                                )
                            )
                            'customPicker    (block (objList displayList filt)
                                (setq objList (sysFindObject gPlayerShip "T"))
                                (setq displayList (list))
                                (setq objList (filter objList obj (not (eq (objGetName obj) ""))))
                                (setq filt (dsf_RemoveScreenState 'tsFilter))
                                (if filt
                                    (setq objList (filter objList obj (strFind (objGetName obj) filt)))
                                )
                                (enum objList obj
                                    (lnkAppend displayList (list
                                        'title (objGetName obj 1)
                                        'subtitle (cat "Gate to " (objGetName obj 1))
                                        'pos (objGetPos obj)
                                    ))
                                )
                                displayList
                            )
                        ) ;;; END TRAVEL SERVICES - SYSTEM

                    ;;;;; TRAVEL SERVICES - GALAXY
                    (eq screen "TravelServices-Galaxy")
                        (list
                            'screenName     "Galaxy Travel Services"
                            'paneDesc       "Welcome to our Galaxy Level Services. Which system may we direct you?"
                            'screenType     "CustomPicker"
                            'paneType       "TextInput"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Filter/Gate" 'G)
                                    'runFunc    '(block (input prevInput)
                                        ;; if the filter text matches a stored one or is Nil, then
                                        ;; it means we want to do a enter
                                        (setq input (scrGetInputText gScreen))
                                        (setq prevInput (dsf_RemoveScreenState 'tsFilter))
                                        (if (or (eq input prevInput) (eq input Nil) (eq input ""))
                                            (block (dest)
                                                (setq dest (dsf_GetListEntryData 'dest))
                                                (objGateTo gPlayerShip
                                                    dest
                                                    (item (sysGetStargates dest) 0)
                                                    &efStargateOut;
                                                )
                                                (god_ExitAction)
                                                (dsf_ExitAction)
                                            )
                                            (block Nil
                                                ;; set the filter and redisplay
                                                (dsf_SetScreenState 'tsFilter input)
                                                (dsf_BuildPaneDesc (cat "Filtering Data By: " input ".\n\n"))
                                                (god_ScreenData "TravelServices-Galaxy")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'name       '("Reset" 'R)
                                    'runFunc    '(block Nil
                                        ;; re-display the screen so we can run a filter again
                                        (dsf_RemoveScreenState 'tsFilter)
                                        (god_ScreenData "TravelServices-Galaxy")
                                    )
                                )
                            )
                            'customPicker    (block (sysList displayList filt)
                                (setq sysList (sysGetNodes))
                                (setq displayList (list))
                                (setq sysList (filter sysList sys (and (not (eq sys "EndGame")) (not (eq sys (sysGetNode))))))
                                (setq filt (dsf_RemoveScreenState 'tsFilter))
                                (if filt
                                    (setq sysList (filter sysList sys (strFind (sysGetName sys) filt)))
                                )
                                (enum sysList sys
                                    (lnkAppend displayList (list
                                        'title (sysGetName sys)
                                        'subtitle (cat "Gate to " (sysGetName sys))
                                        'dest sys
                                    ))
                                )
                                displayList
                            )
                        ) ;;; END TRAVEL SERVICES - GALAXY

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; SPAWN SPACE OBJECTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    ;;;;; SPAWN OBJECTS
                    (eq screen "Spawn")
                        (list
                            'screenName     "Spawn Ships"
                            'paneDesc       "Spawn ship by name or unid."
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(block (input)
                                ;; if we have a 'ssNameSearch in the state, remove it and set the text input
                                (setq input (dsf_RemoveScreenState 'ssShipSearch))
                                (if input
                                    (scrSetInputText gScreen input)
                                )
                            )
                            'actions        (list
                                (list
                                    'name       '("Search" 'S)
                                    'runFunc    '(block (shp)
                                        (setq shp (scrGetInputText gScreen))
                                        (if (not (eq (int shp) Nil))
                                            ;; shp is a unid
                                            (block Nil
                                                (setq hex (int shp))
                                                ;; try to write to the UNID type, this helps us weed out nonexistant UNID's
                                                (setq exists (typSetGlobalData hex "godwashere" True))
                                                ;; also try to create it as an item. If it fails, it's better
                                                (setq exists (isError (itmCreate hex 1)))
                                                (if (and (not (eq hex Nil)) exists)
                                                    (block Nil
                                                        ;; this might throw an error. If it does, this execution loop stops dead.
                                                        ;; But we don't crash, so player is free to try again.
                                                        (setq shp (sysCreateShip hex (objGetPos gPlayerShip) &svIndependent;))
                                                        ;; if we are still running here, it's safe to destroy the ship we just created
                                                        (objDestroy shp)
                                                        (setq shp hex)
                                                    )
                                                )
                                                (if shp
                                                    (block Nil
                                                        ;; store the ship away
                                                        (dsf_SetScreenState 'ssShip shp)
                                                        (god_ScreenData "Spawn-Counter")
                                                    )
                                                    (block (input)
                                                        ;; store the current input text in the state.
                                                        (dsf_SetScreenState 'ssShipSearch (scrGetInputText gScreen))
                                                        ;; build a message that this was an error
                                                        (dsf_BuildPaneDesc (cat "We could not find an ship matching that UNID. Please try again.\n\n"))
                                                        ;; show the same screen again
                                                        (god_ScreenData "Spawn")
                                                    )
                                                )
                                            )
                                            ;; shp is a name
                                            (block Nil
                                                (setq shp (unvUNID shp))
                                                ;; if we have an ship, show the counter screen, else
                                                ;; show an error, and display the input text again.
                                                (if (eq (item shp 1) 'shipclass)
                                                    (block Nil
                                                        ;; store the ship away
                                                        (dsf_SetScreenState 'ssShip (item shp 0))
                                                        (god_ScreenData "Spawn-Counter")
                                                    )
                                                    (block (input)
                                                        ;; store the current input text in the state.
                                                        (dsf_SetScreenState 'ssShipSearch (scrGetInputText gScreen))
                                                        ;; build a message that this was an error
                                                        (dsf_BuildPaneDesc (cat "We could not find an ship matching the name \"" (scrGetInputText gScreen) "\".\n\n"))
                                                        ;; show the same screen again
                                                        (god_ScreenData "Spawn")
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        ) ;;; END SPAWN OBJECTS

                    ;;;;; SPAWN OBJECTS - COUNTER
                    (eq screen "Spawn-Counter")
                        (list
                            'screenName     "Spawn: Counter"
                            'paneDesc       (cat "How many \"" (shpGetClassName (dsf_GetScreenState 'ssShip) 2) "\" do you want to create.")
                            'paneType       "Counter"
                            'noSave         True
                            'backFunc       '(dsf_RemoveScreenState 'ssShip)
                            'exitFunc       '(god_ExitAction)
                            'initFunc       '(scrSetCounter gScreen 1)
                            'actions        (list
                                (list
                                    'name       '("Create Neutral" 'N)
                                    'message    "Created neutral ships.\n\n"
                                    'runFunc    '(block (shp cnt pos)
                                        (setq shp (dsf_GetScreenState 'ssShip))
                                        (setq cnt (scrGetCounter gScreen))
                                        (if (gr cnt 0)
                                            (block Nil
                                                (setq pos (sysVectorPolarOffset (objGetPos gPlayerShip) 0 10))
                                                (for i 1 cnt (shpOrderPatrol (sysCreateShip shp pos &svIndependent;) (random (sysFindObject gPlayerShip "t")) (random 10 200)))
                                                (god_ScreenData "Spawn-Counter")
                                            )
                                            Nil
                                        )
                                    )
                                )
                                (list
                                    'name       '("Create Escort" 'E)
                                    'message    "Created ships as escort.\n\n"
                                    'runFunc    '(block (shp cnt pos)
                                        (setq shp (dsf_GetScreenState 'ssShip))
                                        (setq cnt (scrGetCounter gScreen))
                                        (if (gr cnt 0)
                                            (block Nil
                                                (setq pos (sysVectorPolarOffset (objGetPos gPlayerShip) 0 10))
                                                (for i 1 cnt (shpOrderEscort (sysCreateShip shp pos &svIndependent; "fleet") gPlayerShip))
                                                (god_ScreenData "Spawn-Counter")
                                            )
                                            Nil
                                        )
                                    )
                                )
                                (list
                                    'name       '("Create Aggressive" 'A)
                                    'runFunc    '(block (shp cnt pos)
                                        (setq shp (dsf_GetScreenState 'ssShip))
                                        (setq cnt (scrGetCounter gScreen))
                                        (if (gr cnt 0)
                                            (block Nil
                                                (setq pos (objGetPos gPlayerShip))
                                                (for i 1 cnt (shpOrderAttack (sysCreateShip shp (sysVectorRandom pos 15 1 Nil) &svPirates;) gPlayerShip))
                                            )
                                            Nil
                                        )
                                    )
                                )
                                (list
                                    'name       '("Head to Head" 'H)
                                    'runFunc    '(block (target attacker)
                                        ;; if there already is a ssHeadtoHead containing a list with a unid and count,
                                        ;; then proceed to the battle, else enter the data into ssHeadtoHead
                                        (setq target (dsf_GetScreenState 'ssHeadToHead))
                                        (setq attacker (dsf_getScreenState 'ssShip))
                                        (if target 
                                            ;; we have two ships, spawn them
                                            (block (cnt pos)
                                                (setq cnt (scrGetCounter gScreen))
                                                (setq pos (objGetPos gPlayerShip))
                                                (setq god_gAttackerShips (list))

                                                ;; create the first ship and hold it
                                                (setq god_gTargetShip (sysCreateShip target (sysVectorPolarOffset pos 45 15) &svIndependent;))
                                                (shpOrderHold god_gTargetShip)

                                                ;; spawn the secondary ships and hold them
                                                (for i 1 cnt (block (obj)
                                                    (setq obj (sysCreateShip attacker (sysVectorPolarOffset pos (add 130 i) 15) &svIndependent;))
                                                    (shpOrderHold obj)
                                                    (setq god_gAttackerShips (lnkAppend god_gAttackerShips obj))
                                                ))

                                                (sysCreateStation &stGOD_HeadToHead; (sysVectorPolarOffset pos 90 15))
                                                (dsf_ExitAction)
                                            )
                                            ;; this is the first choice, save it and return to selection
                                            (block Nil
                                                (dsf_SetScreenState 'ssHeadToHead attacker)
                                                ;; build a message that this was an error
                                                (dsf_BuildPaneDesc (cat "The first ship has been chosen. Now select a second one.\n\n"))
                                                (god_ScreenData "Spawn")
                                            )
                                        )
                                    )
                                )
                            )
                        ) ;;; END SPAWN OBJECTS - COUNTER

                    ;;;;; SPAWN OBJECTS - STATIONS
                    (eq screen "Spawn-Station")
                        (list
                            'screenName     "Spawn Station"
                            'paneDesc       "Type the UNID of the station you would like to spawn. If it fails, please dont mind the horrible errormessage, but just try again."
                            'paneType       "TextInput"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Spawn" 'S)
                                    'runFunc    '(block (hex exists)
                                        (setq hex (god_HexToDec (scrGetInputText gScreen)))
                                        ;; try to write to the UNID type, this helps us weed out nonexistant UNID's
                                        (setq exists (typSetGlobalData hex "godwashere" True))
                                        (if (and (not (eq hex Nil)) exists)
                                            (block Nil
                                                ;; this might throw an error. If it does, this execution loop stops dead.
                                                ;; But we don't crash, so player is free to try again.
                                                (sysCreateStation hex (sysVectorPolarOffset (objGetPos gPlayerShip) 0 5))
                                            )
                                        )
                                    )
                                )
                            )
                        ) ;;; END SPAWN OBJECTS - STATIONS

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; PLAYER SERVICES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                    ;;;;; PLAYER SERVICES
                    (eq screen "PlayerServices")
                        (list
                            'screenName     "Player Services"
                            'paneDesc       "From millionaire to Admiral in a few keystrokes. Take your pick."
                            'screenType     "CustomPicker"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Select" 'S)
                                    'runFunc    '(god_ScreenData (dsf_GetListEntryData 'dataset))
                                )
                            )
                            'customPicker    (list
                                (list
                                    'title          "Transcendence Banking"
                                    'subtitle       "Lets sit down and have a talk about your economy"
                                    'dataset        "PlayerServices-Bank"
                                )
                                (list
                                    'title          "Game Data"
                                    'subtitle       "View and Modify FleetXP, MilitiaRank, etc..."
                                    'dataset        "PlayerServices-Data"
                                )
                                (list
                                    'title          "Insurance"
                                    'subtitle       "Your life is safe in our hands"
                                    'hideList       '(plyIsInsured gPlayer)
                                    'actions        (list
                                        (list
                                            'name       '("Insure" 'I)
                                            'message    "You have been insured.\n\n"
                                            'runFunc    '(block Nil
                                                (plyInsure gPlayer)
                                                (god_ScreenData "PlayerServices")
                                            )
                                        )
                                    )
                                )
                            )
                        ) ;;; END PLAYER SERVICES

                    ;;;;; PLAYER SERVICES - BANK
                    (eq screen "PlayerServices-Bank")
                        (list
                            'screenName     "Transcendence Banking"
                            'paneDesc       "Welcome to Transcendence Banking. Choose the amount you wish to deposit or withdraw."
                            'paneType       "TextInput"
                            'noSave         True
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Withdraw" 'W)
                                    'runFunc    '(block (cur amount)
                                        (setq cur (plyGetCredits gPlayer))
                                        (setq amount (scrGetCounter gScreen))
                                        (if (and (leq (add cur amount) 10000000) (geq amount 0))
                                            (block Nil
                                                (plyCredit gPlayer amount)
                                                (dsf_BuildPaneDesc (cat amount " has been added to your account.\n\n"))
                                            )
                                            (dsf_BuildPaneDesc "I'm sorry. We can not withdraw that amount.\n\n")
                                        )
                                        (god_ScreenData "PlayerServices-Bank")
                                    )
                                )
                                (list
                                    'name       '("Deposit" 'D)
                                    'runFunc    '(block (cur amount)
                                        (setq cur (plyGetCredits gPlayer))
                                        (setq amount (scrGetCounter gScreen))
                                        (if (and (geq (subtract cur amount) 0) (geq amount 0))
                                            (block Nil
                                                (plyCharge gPlayer amount)
                                                (dsf_BuildPaneDesc (cat amount " has been removed from your account.\n\n"))
                                            )
                                            (dsf_BuildPaneDesc "I'm sorry. We can not deposit that amount.\n\n")
                                        )
                                        (god_ScreenData "PlayerServices-Bank")
                                    )
                                )
                            )
                        ) ;;; END PLAYER SERVICES - BANK

                    ;;;;; PLAYER SERVICES - MODIFY DATA
                    (eq screen "PlayerServices-ModifyData")
                        (list
                            'screenName     "Modify Player Data"
                            'paneDesc       "Input the new value and press enter or click Save"
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Save" 'S)
                                    'runFunc    '(block (func val)
                                        (setq func (dsf_RemoveScreenState 'changeFunc))
                                        (if (eq (dsf_GetScreenData 'paneType) 'Counter)
                                            (setq val (scrGetCounter gScreen))
                                            (setq val (scrGetInputText gScreen))
                                        )
                                        ((eval func) val)
                                        (god_ScreenData "PlayerServices-Data")
                                    )
                                )
                            )
                        )
                    (eq screen "PlayerServices-Data")
                        (list
                            'screenName     "Player Data"
                            'paneDesc       "This is an overview of the data the vanilla game sets on you ship or other objects. Filter them if you want."
                            'screenType     "CustomPicker"
                            'paneType       "TextInput"
                            'nextPane       'Counter
                            'exitFunc       '(god_ExitAction)
                            'actions        (list
                                (list
                                    'name       '("Filter/Modify" 'M)
                                    'runFunc    '(block Nil
                                        ;; if the filter text matches a stored one or is Nil, then
                                        ;; it means we want to do a enter
                                        (setq input (scrGetInputText gScreen))
                                        (setq prevInput (dsf_RemoveScreenState 'pgFilter))
                                        (if (or (eq input prevInput) (eq input Nil) (eq input ""))
                                            (block Nil
                                                (dsf_SetScreenState 'changeFunc (dsf_GetListEntryData 'changeFunc))
                                                (dsf_BuildPaneDesc (cat (dsf_GetListEntryData 'title) "\n" (dsf_GetListEntryData 'subtitle) ".\n\n"))
                                                (god_ScreenData "PlayerServices-ModifyData")
                                            )
                                            (block Nil
                                                ;; set the filter and redisplay
                                                (dsf_SetScreenState 'pgFilter input)
                                                (dsf_BuildPaneDesc (cat "Filtering Data By: " input ".\n\n"))
                                                (god_ScreenData "PlayerServices-Data")
                                            )
                                        )
                                    )
                                )
                                (list
                                    'name       '("Reset" 'R)
                                    'runFunc    '(block Nil
                                        ;; re-display the screen so we can run a filter again
                                        (dsf_RemoveScreenState 'pgFilter)
                                        (god_ScreenData "PlayerServices-Data")
                                    )
                                )
                            )
                            'customPicker    (block (displayList filt)
                                (setq filt (dsf_RemoveScreenState 'pgFilter))
                                (setq displayList (list
                                    (list
                                        'title          (cat "FleetXP: " (objGetData gPlayerShip 'fleetXP))
                                        'subtitle       "Fleet experience points"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'fleetXP arg))
                                    )
                                    (list
                                        'title          (cat "FleetLevel: " (objGetData gPlayerShip 'fleetLevel))
                                        'subtitle       "Fleet level (1-6)"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'fleetLevel arg))
                                    )
                                    (list
                                        'title          (cat "FleetTFSuccess: " (objGetData gPlayerShip 'fleetTFSuccess))
                                        'subtitle       "Number of successful Task Force missions"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'fleetTFSuccess arg))
                                    )
                                    (list
                                        'title          (cat "FleetTFFailure: " (objGetData gPlayerShip 'fleetTFailure))
                                        'subtitle       "Number of failed Task Force missions"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'fleetTFailure arg))
                                    )
                                    (list
                                        'title          (cat "MilitiaRank: " (objGetData gPlayerShip 'militiaRank))
                                        'subtitle       "An integer representing the player's rank in militia"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'militiaRank arg))
                                    )
                                    (list
                                        'title          (cat "MilitiaSuccess: " (objGetData gPlayerShip 'militiaSuccess))
                                        'subtitle       "Number of successful Militia missions"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'militiaSuccess arg))
                                    )
                                    (list
                                        'title          (cat "MilitiaFailure: " (objGetData gPlayerShip 'militiaFailure))
                                        'subtitle       "Number of faield Militia missions"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'militiaFailure arg))
                                    )
                                    (list
                                        'title          "BlackMarketCrime"
                                        'subtitle       (cat "Description of player's offense against the Sindikat\n\n"  (objGetData gPlayerShip 'blackMarketCrime))
                                        'nextPane       'TextInput
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'blackMarketCrime arg))
                                    )
                                    (list
                                        'title          (cat "BlackMarketCrimeCost: " (objGetData gPlayerShip 'blackMarketCrimeCost))
                                        'subtitle       "Price that the player has to pay to stop bounty hunters"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'blackMarketCrimeCost arg))
                                    )
                                    (list
                                        'title          (cat "BlackMarketLevel: " (objGetData gPlayerShip 'blackMarketLevel))
                                        'subtitle       "Black market level (1-6)"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'blackMarketLevel arg))
                                    )
                                    (list
                                        'title          (cat "BlackMarketXP: " (objGetData gPlayerShip 'blackMarketXP))
                                        'subtitle       "Black Market experience points"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'blackMarketXP arg))
                                    )
                                    (list
                                        'title          (cat "ArenaBattles: " (objGetData gPlayerShip 'arenaBattles))
                                        'subtitle       "Number of battles in the arena"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'arenaBattles arg))
                                    )
                                    (list
                                        'title          (cat "ArenaRank: " (objGetData gPlayerShip 'arenaRank))
                                        'subtitle       "An integer representing the Captain's rank"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'arenaRank arg))
                                    )
                                    (list
                                        'title          "CommonCrime"
                                        'subtitle       (cat "Description of the player's crime\n\n"  (objGetData gPlayerShip 'commonCrime))
                                        'nextPane       'TextInput
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'commonCrime arg))
                                    )
                                    (list
                                        'title          (cat "CommonCrimeSeverity: " (objGetData gPlayerShip 'commonCrimeSeverity))
                                        'subtitle       "The severity of the crime"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'commonCrimeSeverity arg))
                                    )
                                    (list
                                        'title          "RingerCrime"
                                        'subtitle       (cat "Description of the player's crime agains ringer collective\n\n"  (objGetData gPlayerShip 'ringerCrime))
                                        'nextPane       'TextInput
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'ringerCrime arg))
                                    )
                                    (list
                                        'title          (cat "RingerCrimeSeverity: " (objGetData gPlayerShip 'ringerCrimeSeverity))
                                        'subtitle       "The severity of the crime"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'ringerCrimeSeverity arg))
                                    )
                                    (list
                                        'title          (cat "Rins: " (objGetData gPlayerShip 'rins))
                                        'subtitle       "Number of rins (Ringer collective currency)"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'rins arg))
                                    )
                                    (list
                                        'title          (cat "SistersAttitude: " (objGetData gPlayerShip 'sistersAttitude))
                                        'subtitle       "Abstract measure of the sisters' attitude towards the player"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'sistersAttitude arg))
                                    )
                                    (list
                                        'title          (cat "SistersLastDonation: " (objGetData gPlayerShip 'sistersLastDonation))
                                        'subtitle       "Time at which the player donated last (Nil if never)"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'sistersLastDonation arg))
                                    )
                                    (list
                                        'title          (cat "SlaveReward: " (objGetData gPlayerShip 'slaveReward))
                                        'subtitle       "Number of slaves for which player has already been rewarded"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'slaveReward arg))
                                    )
                                    (list
                                        'title          (cat "SlaveSales: " (objGetData gPlayerShip 'slaveSales))
                                        'subtitle       "Proceeds from slave sales"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'slaveSales arg))
                                    )
                                    (list
                                        'title          (cat "SlavesFreed: " (objGetData gPlayerShip 'slavesFreed))
                                        'subtitle       "Number of slaves freed to commonwealth authorities"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'slavesFreed arg))
                                    )
                                    (list
                                        'title          (cat "TualiSymbiote: " (objGetData gPlayerShip 'tualiSymbiote))
                                        'subtitle       "Has The Tuali Symbiote been implanted (Must be True or Nil)"
                                        'changeFunc     '(lambda (arg) (objSetData gPlayerShip 'tualiSymbiote arg))
                                    )
                                    (list
                                        'title          (cat "DominaXP: " (typGetGlobalData &stDomina; "xp"))
                                        'subtitle       "Domina XP"
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "xp" arg))
                                    )
                                    (list
                                        'title          (cat "DominaLevel: " (typGetGlobalData &stDomina; "level"))
                                        'subtitle       "Your current domina Level"
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "level" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime1: " (typGetGlobalData &stDomina; "lastInvokeTime1"))
                                        'subtitle       "Last time a lvl 1 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime1" arg))
                                    )                                        (list
                                       'title           (cat "LastInvokeTime2: " (typGetGlobalData &stDomina; "lastInvokeTime2"))
                                        'subtitle       "Last time a lvl 2 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime2" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime3: " (typGetGlobalData &stDomina; "lastInvokeTime3"))
                                        'subtitle       "Last time a lvl 3 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime3" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime4: " (typGetGlobalData &stDomina; "lastInvokeTime4"))
                                        'subtitle       "Last time a lvl 4 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime4" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime5: " (typGetGlobalData &stDomina; "lastInvokeTime5"))
                                        'subtitle       "Last time a lvl 5 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime5" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime6: " (typGetGlobalData &stDomina; "lastInvokeTime6"))
                                        'subtitle       "Last time a lvl 6 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime6" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime7: " (typGetGlobalData &stDomina; "lastInvokeTime7"))
                                        'subtitle       "Last time a lvl 7 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime7" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime8: " (typGetGlobalData &stDomina; "lastInvokeTime8"))
                                        'subtitle       "Last time a lvl 8 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime8" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime9: " (typGetGlobalData &stDomina; "lastInvokeTime9"))
                                        'subtitle       "Last time a lvl 9 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime9" arg))
                                    )
                                    (list
                                        'title          (cat "LastInvokeTime10: " (typGetGlobalData &stDomina; "lastInvokeTime10"))
                                        'subtitle       "Last time a lvl 10 power was invoked."
                                        'changeFunc     '(lambda (arg) (typSetGlobalData &stDomina; "lastInvokeTime10" arg))
                                    )
                                ))
                                ;(typSetGlobalData &stDomina; "gainLevel" level)
                                ;sistersStory:    State of story-telling
                                ;blackMarketMission: Current black market mission StK = deliver container to St. Katharine's
                                ;blackMarketShields: Level at which player got free shields
                                ;blackMarketWeapon: Level at which player got free weapon
                                ;; if filter is  set loop through the list
                                (if filt
                                    (setq displayList (filter displayList lst (strFind (dsf_HashGet lst 'title) filt)))
                                )
                                displayList
                            )
                        ) ;;; END PLAYER SERVICES - MODIFY DATA
                )
            )))


            ;; this is basically a wrapper around (int)
            ;; that adds "0x" to the string if not present
            (setq god_HexToDec (lambda (str)
                (block Nil
                    ;; check if string starts with 0x
                    (if (eq (strFind str "0x") Nil)
                        (setq str (cat "0x" str))
                    )
                    (int str)
                )
            ))

            ;; makes damage types human readable
            (setq god_IntToDamageType (lambda (num)
                (switch
                    (eq num 0) "Laser"
                    (eq num 1) "Kinetic"
                    (eq num 2) "Particle"
                    (eq num 3) "Blast"
                    (eq num 4) "Ion"
                    (eq num 5) "Thermo"
                    (eq num 6) "Positron"
                    (eq num 7) "Plasma"
                    (eq num 8) "Antimatter"
                    (eq num 9) "Nano"
                    (eq num 10) "Graviton"
                    (eq num 11) "Singularity"
                    (eq num 12) "DarkAcid"
                    (eq num 13) "DarkSteel"
                    (eq num 14) "DarkLightning"
                    (eq num 15) "DarkFire"
                    num
                )
            ))


            (setq god_IntToEnhancement (lambda (num)
                (block (sel (notfound True))
                    (enumWhile god_EnhancementData notfound enh (block (dif)
                        (setq dif (subtract num (int (dsf_HashGet enh 'hex))))
                        (if (and (leq dif 255) (gr dif 0)) (block Nil
                            (setq sel enh)
                            (setq notfound Nil)
                        ))
                    ))
                    sel
                )
            ))


            (setq god_EnhancementData (list
                (list
                    'name           "Damage Reflect"
                    'devices        "Shield"
                    'criteria       "s"
                    'hex            "0x0300"
                    'type           2
                    'desc           "Causes damage type Y to bounce off shields with probability X."
                )
                (list
                    'name           "Damage Transparency"
                    'devices        "Shield"
                    'criteria       "s"
                    'hex            "0x8300"
                    'type           2
                    'desc           "Causes damage type Y to pass through shields with probability X."
                )
                (list
                    'name           "Regeneration"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0200"
                    'type           0
                    'desc           "More information needed.."
                )
                (list
                    'name           "Decay"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x8200"
                    'type           0
                    'desc           "More information needed.."
                )
                (list
                    'name           "Immunity, Radiation"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0B00"
                    'type           0
                    'desc           "Will render armor immune to radiation."
                )
                (list
                    'name           "Immunity, Blinding"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0B10"
                    'type           0
                    'desc           "Will render armor immune to blinding."
                )
                (list
                    'name           "Immunity, EMP"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0B20"
                    'type           0
                    'desc           "Will render armor immune to EMP."
                )
                (list
                    'name           "Immunity, Device Damage"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0B30"
                    'type           0
                    'desc           "Will render armor immune to Device Damage."
                )
                (list
                    'name           "Immunity, Disintegration"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0B40"
                    'type           0
                    'desc           "Will render armor immune to Disintegration."
                )
                (list
                    'name           "Immunity, Blinding/EMP/Device Damage"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0C00"
                    'type           0
                    'desc           "Will render armor immune to Blinding/EMP/Device Damage."
                )
                (list
                    'name           "Interferes with Shields"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x8C00"
                    'type           0
                    'desc           "Armor will interfere with shields."
                )
                (list
                    'name           "Regenerate near Sun"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0D00"
                    'type           0
                    'desc           "Armor will regenerate near a sun."
                )
                (list
                    'name           "Refuel near Sun"
                    'devices        "Armor"
                    'criteria       "a"
                    'hex            "0x0E00"
                    'type           0
                    'desc           "Armor will refuel ship's reactor near a sun."
                )
                (list
                    'name           "Damage / Hit Point Bonus"
                    'devices        "Weapon, Shield, Armor"
                    'criteria       "was"
                    'hex            "0x0100"
                    'type           1
                    'desc           "Will increase damage output or hitpoints from 10 to 150 percent."
                )
                (list
                    'name           "Damage / Hit Point Penalty"
                    'devices        "Weapon, Shield, Armor"
                    'criteria       "was"
                    'hex            "0x8100"
                    'type           1
                    'desc           "Will decrease damage output or hitpoints from 10 to 150 percent."
                )
                (list
                    'name           "Speed Increase"
                    'devices        "Weapon"
                    'criteria       "w"
                    'hex            "0x1000"
                    'type           1
                    'desc           "Will increase a weapons rate of fire from 10 to 150%."
                )
                (list
                    'name           "Speed Decrease"
                    'devices        "Weapon"
                    'criteria       "w"
                    'hex            "0x9000"
                    'type           1
                    'desc           "Will decrease a weapons rate of fire from 10 to 150%."
                )
                (list
                    'name           "Damage Reduction, Energy"
                    'devices        "Shield, Armor"
                    'criteria       "sa"
                    'hex            "0x0600"
                    'type           1
                    'desc           "More information needed."
                )
                (list
                    'name           "Damage Reduction, Matter"
                    'devices        "Shield, Armor"
                    'criteria       "sa"
                    'hex            "0x0700"
                    'type           1
                    'desc           "More information needed."
                )
                (list
                    'name           "Damage Reduction, Special I"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x0800"
                    'type           2
                    'desc           "Reduce damage of type Y and Y+1. More information needed."
                )
                (list
                    'name           "Damage Reduction, Special II"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x0900"
                    'type           2
                    'desc           "Reduce damage of type Y. More information needed."
                )
                (list
                    'name           "Damage Reduction, Special III"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x0A00"
                    'type           2
                    'desc           "Reduce damage of type Y and Y+2 with 1.5*X. More information needed."
                )
                (list
                    'name           "Damage Increase, Energy"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x8600"
                    'type           1
                    'desc           "More information needed."
                )
                (list
                    'name           "Damage Increase, Matter"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x8700"
                    'type           1
                    'desc           "More information needed."
                )
                (list
                    'name           "Damage Increase, Special I"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x8800"
                    'type           2
                    'desc           "Increase damage of type Y and Y+1. More information needed."
                )
                (list
                    'name           "Damage Increase, Special II"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x8900"
                    'type           2
                    'desc           "Increase damage of type Y. More information needed."
                )
                (list
                    'name           "Damage Increase, Special III"
                    'devices        "Shield, Armor, (Weapon?)"
                    'criteria       "wsa"
                    'hex            "0x8A00"
                    'type           2
                    'desc           "Increase damage of type Y and Y+2 with 1.5*X. More information needed."
                )
                (list
                    'name           "Efficiency"
                    'devices        "Shield, Weapon"
                    'criteria       "ws"
                    'hex            "0x0F00"
                    'type           1
                    'desc           "Lowers power consumption. Effect of higher X unknown. More information needed."
                )
                (list
                    'name           "Decrease Efficiency"
                    'devices        "Shield, Weapon"
                    'criteria       "ws"
                    'hex            "0x8F00"
                    'type           1
                    'desc           "Increase power consumption. Effect of higher X unknown. More information needed."
                )
            ))

        )
    </Globals>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; HEAD-TO-HEAD TIMER
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	<StationType UNID="&stGOD_HeadToHead;"
		backgroundObject=	"true"
		>
		<Image imageID="&rsDebris1;" imageX="0" imageY="0" imageWidth="1" imageHeight="1"/>
		<Events>
			<OnCreate>
                (block Nil
                    (plyMessage gPlayer "Starting Head to Head in 5 sec...")
                    (sysAddObjTimerEvent 150 gSource "InitCombat")
                )
			</OnCreate>
            <InitCombat>
                (block Nil
                    ;; order attack on first ship
                    (shpCancelOrders god_gTargetShip)
                    ;; register for events on the shpis
                    (objRegisterForEvents gSource god_gTargetShip)
                    ;; save the ship being attacked
                    (setq god_gTargetedShip (item god_gAttackerShips 0))
                    (shpOrderAttack god_gTargetShip god_gTargetedShip)
                    ;(dbgOutput "Targeting first ship")
                    ;; order attack on second ships and register for events
                    (enum god_gAttackerShips obj (block Nil
                        (objRegisterForEvents gSource obj)
                        (shpCancelOrders obj)
                        (shpOrderAttack obj god_gTargetShip)
                    ))
                    ;; remove the first ship from the list
                    (setq god_gAttackerShips (lnkRemove god_gAttackerShips 0 Nil))
                    (sysAddObjRecurringTimerEvent 90 gSource "CheckCombat")
                )
            </InitCombat>
            <OnObjDestroyed>
                (block Nil
                    ;; if the attacker list is empty, remove station
                    (if (eq (count god_gAttackerShips) 0)
                        ;; if the attacker list is empty, self destruct
                        (block Nil
                            (plyMessage gPlayer "Combat Over")
                            (objDestroy gSource)
                        )
                        (block Nil
                            ;; if destroyed ship is the targetted ship, retarget
                            (if (eq aObjDestroyed god_gTargetedShip) (block (bestD)
                                ;; target the closest ship
                                (setq bDist 999999)
                                (enum god_gAttackerShips obj (block (dist)
                                    (setq dist (objGetDistance god_gTargetShip obj))
                                    (if (ls dist bDist) (block Nil
                                        (setq bDist dist)
                                        (setq god_gTargetedShip obj)
                                    ))
                                ))
                                (shpCancelOrders god_gTargetShip)
                                (shpOrderAttack god_gTargetShip god_gTargetedShip)
                                ;(dbgOutput "ObjDestroyed - Targeting closest ship: " god_gTargetedShip)
                                ;; remove the targeted ship from the list
                                (setq god_gAttackerShips (lnkRemove god_gAttackerShips (find god_gAttackerShips god_gTargetedShip) Nil))
                            ))
                        )
                    )
                )
            </OnObjDestroyed>
            <CheckCombat>
                (block Nil
                    (if (eq (count god_gAttackerShips) 0)
                        ;; if the attacker list is empty, self destruct
                        (block Nil
                            (plyMessage gPlayer "Combat Over")
                            (objDestroy gSource)
                        )
                        (block (dist hasShip)
                            ;; if target is more than 200 ls away or obj not in list, re-target
                            (setq dist (objGetDistance god_gTargetShip god_gTargetedShip))
                            (setq hasShip (find god_gAttackerShips god_gTargetedShip))
                            ;(dbgOutput "CheckComabat - Distance: " dist " hasShip: " hasShip)
                            (if (or (gr dist 200) (eq hasShip Nil) (eq dist Nil)) (block (bestD)
                                ;; add the same ship again
                                (setq god_gAttackerShips (lnkAppend god_gAttackerShips god_gTargetedShip))
                                ;; target the closest ship
                                (setq bDist 999999)
                                (enum god_gAttackerShips obj (block (tdist)
                                    (setq tdist (objGetDistance god_gTargetShip obj))
                                    (if (ls tdist bDist) (block Nil
                                        (setq bDist tdist)
                                        (setq god_gTargetedShip obj)
                                    ))
                                ))
                                ;; if we dont have a bDist better than 200, cancel the fight
                                (if (gr bDist 200)
                                    (block Nil
                                        (plyMessage gPlayer "Ships escaped. Cancelling fight...")
                                        (shpCancelOrders god_gTargetShip)
                                        (enum god_gAttackerShips obj (shpCancelOrders obj))
                                        (objDestroy gSource)
                                    )
                                    ;; else taget new
                                    (block Nil
                                        (shpCancelOrders god_gTargetShip)
                                        (shpOrderAttack god_gTargetShip god_gTargetedShip)
                                        ;(dbgOutput "CheckCombat - Targeting closest ship: " god_gTargetedShip)
                                        ;; remove the targeted ship from the list
                                        (setq god_gAttackerShips (lnkRemove god_gAttackerShips (find god_gAttackerShips god_gTargetedShip) Nil))
                                    )
                                )
                            ))
                        )
                    )
                )
            </CheckCombat>
		</Events>
	</StationType>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; TIME STOP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    <StationType UNID="&stGOD_TimeStop;"
        backgroundObject="true"
        >
        <Image imageID="&rsDebris1;" imageX="0" imageY="0" imageWidth="1" imageHeight="1"/>
        <Events>
            <OnCreate>
                (sysAddObjRecurringTimerEvent 1 gSource "TimeStop")
            </OnCreate>
            <TimeStop>
                (block Nil
                    ;; run the time stop
                    (god_RunTimeStop)
                )
            </TimeStop>
        </Events>
    </StationType>


    <Globals>
        (block Nil
            (setq god_TimeStopStation Nil)

            (setq god_TimeStop (lambda Nil
                (block Nil
                    ;; create a station in this system,
                    ;; and let it handle the rest.
                    (setq god_TimeStopStation
                        (sysCreateStation
                            &stGOD_TimeStop;
                            (sysVectorPolarOffset Nil 0 10000)
                        )
                    )
                )
            ))

            (setq god_RunTimeStop (lambda Nil
                (block Nil
                    ;; stop time for everybody, except this station
                    (sysStopTime 1 god_TimeStopStation)
                )
            ))

            (setq god_DisableTimeStop (lambda Nil
                (block Nil
                    ;; destroy the time stop station
                    (objDestroy god_TimeStopStation)
                    (setq god_TimeStopStation Nil)
                )
            ))


            (setq god_BackAction (lambda Nil
                (block Nil
                    (god_DisableTimeStop)
                )
            ))

            (setq god_ExitAction (lambda Nil
                (block Nil
                    (god_DisableTimeStop)
                )
            ))
        )

    </Globals>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; JUST INSTALL (TM)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    <ItemType UNID="&itGOD_SlotDevice;"
        name=            "2 Slot Device"
        level=            "1"
        value=            "1"
        mass=             "1"
        frequency=        "notrandom"
        modifiers=        "MinorItem; NotForSale; CannotOrder;"

        description=      "This will allow your ship to use 2 more devices."
        >
        <Image imageID="&rsItems1;" imageX="0" imageY="192" imageWidth="96" imageHeight="96"/>
        <MiscellaneousDevice deviceSlots="-3" />
    </ItemType>

    <Globals>
        (block Nil

            (setq god_JustInstall (lambda (target itm)
                (block (install can)
                    (setq install Nil)
                    (setq can (shpCanInstallDevice gPlayerShip itm))
                    (switch
                        (find '(2) can)
                            ;; need more slots
                            (block (gory rItem slotDev)
                                ;; remove an installed device
                                (setq rItem (item (objGetItems gPlayerShip "*I") 0))
                                (if (shpRemoveDevice gPlayerShip rItem)
                                    (block Nil
                                        ;; if we successfully made space
                                        ;; add and install a SlotDevice
                                        (setq slotDev (itmCreate &itGOD_SlotDevice; 1))
                                        (objAddItem gPlayerShip slotDev)
                                        (shpInstallDevice gPlayerShip slotDev)
                                        ;; add the uninstalled item back
                                        (shpInstallDevice gPlayerShip rItem)
                                        ;; we can install the other device
                                        (setq install True)
                                    )
                                )
                                (dsf_BuildPaneDesc "There seems to have occured an error. Installing failed.\n\n")
                            )
                        (find '(4 5 6 8 9 12 13) can)
                            (block (gory rItem)
                                ;; remove a device of the type we want to install
                                (setq gory (itmGetCategory itm))
                                (setq gory (switch
                                    (or (eq gory 0x4) (eq gory 0x10))
                                        "wI"
                                    (or (eq gory 0x80) (eq gory 0x40) (eq gory 0x1000) (eq gory 0x800))
                                        "d~wI"
                                    "*I"
                                ))
                                (setq rItem (item (objGetItems target gory) 0))
                                (if (shpRemoveDevice target rItem)
                                    ;; if we successfully made space, then we want to install
                                    (setq install True)
                                    (dsf_BuildPaneDesc "There seems to have occured an error. Remove a device from target ship, and try again.\n\n")
                                )
                            )
                        (find '(7) can)
                            (dsf_BuildPaneDesc "Target ships reactor not powerful enough.\n\n")
                        (find '(10) can)
                            (dsf_BuildPaneDesc "Target ship cannot install a cargo expansion that large.\n\n")
                        (find '(11) can)
                            (dsf_BuildPaneDesc "Target ship cannot install an item with so high a power output.\n\n")
                        (find '(0) can)
                            (setq install True)
                    )
                    (if install 
                        (block Nil
                            (objAddItem target itm)
                            (shpInstallDevice target itm)
                            (scrRemoveItem gScreen 1)
                            (dsf_BuildPaneDesc "Device installed on target ship.\n\n")
                            (god_ScreenData "Initial")
                        )
                        (block Nil
                            (god_ScreenData "IndiscriminateInstall")
                        )
                    )
                )
            ))
        )
    </Globals>


</TranscendenceExtension>
<!--
vim:enc=utf-8:nu:ai:si:et:ts=4:sw=4:ft=tscript:
-->
