<?xml version="1.0" ?>
<!DOCTYPE TranscendenceExtension
[
    <!ENTITY modGODModuleEnhancements         "0xDCBA0510">
]>

<TranscendenceExtension
  UNID="&modGODModuleEnhancements;"
  name="G.O.D. Module - Enhancements"
  credits="alterecco"
  version="1.0">

  <Globals>
    (block (module)

    (setq module (list
      '((weight     0)
        (title      "Apply Enhancement")
        (subtitle   "Because a +fast Ares Archcannon works wonders!")
        (on-select  (block nil
          (dsf/action 'select "Select" 'S (lambda nil
            (god/enhance-item)
          ))
        ))
      )
      '((weight       0)
        (title        "Analyze Enhancement")
        (subtitle     "Find out just what is going on with your enhancement")
        (hide         (block ((do-hide true))
          (objEnumItems gPlayerShip itm
            (if (itmIsEnhanced itm) (setq do-hide nil))
          )
          do-hide
        ))
        (on-select    (block nil
          (dsf/action 'select "Select" 'S (lambda nil
            (block nil
              (dsf/screen 'analyze-enhancement "Analyze Enhancement" 'itempicker-player)
              (dsf/item-filter "swa")

              (dsf/on-pane-initialize (lambda nil (block (itm hex)
                (setq itm (dsf/item))
                (if (and itm (setq hex (itmIsEnhanced itm)))
                  (block (data type)
                    (setq data (god/decode-enhancement hex))
                    (setq type (fn/hash-get data 'type))
                    (dsf/description (cat "Type: " (fn/hash-get data 'name) " [" (fn/hash-get data 'hex) "]\n"))
                    (if (eq type 2)
                      (dsf/description (cat "Damage Type: " (fn/int-to-damagetype (modulo (divide hex 16) 16)) "\n") 'append)
                    )
                    (if (or (eq type 2) (eq type 1))
                      (dsf/description (cat "Power: " (modulo hex 16) "\n") 'append)
                    )
                  )
                  (dsf/description "Item is not enhanced")
                )
              )))

              (dsf/show-screen)
            )
          ))
        ))
      )
    ))

    (setq god/modules (if (isError god/modules)
      module
      (append god/modules module)
    ))

    (setq god/enhance-item (lambda nil (block nil
      (dsf/screen 'enhance-item "Enhance Item" 'itempicker-player)
      (dsf/description "Select an item you want to enhance")
      (dsf/item-filter "swa")

      (dsf/action 'select "Select" 'S (lambda nil (block (itm criteria)
        (setq itm (dsf/item))
        (dsf/session 'enhancement-item itm)
        (setq criteria (fn/int-to-criteria (itmGetCategory itm)))
        (if (eq criteria "l") (setq criteria "w"))
        (dsf/session 'enhancement-criteria criteria)
        (dsf/session 'enhancement-object gPlayerShip)
        (god/enhancement-choose)
      )))
      (dsf/disable-action 'select (lambda nil (not (dsf/item))))
      (dsf/no-save 'select true)

      (dsf/show-screen)
    )))

    (setq god/enhancement-choose (lambda nil (block (type)
      (dsf/screen 'enhancement-choose "Select Enhancement" 'custompicker)
      (dsf/description "Choose the enhancement you want to apply")

      (setq criteria (dsf/session-remove 'enhancement-criteria))
      (dsf/list-data (fn/list-map
        (filter god/enhancement-data e (find (fn/hash-get e 'criteria) criteria)) e
        (list
          (list 'title      (cat (fn/hash-get e 'name) ": " (fn/hash-get e 'hex)))
          (list 'subtitle   (cat "Applicable for: " (fn/hash-get e 'devices) "\n\n" (fn/hash-get e 'desc)))
          (list 'hex        (fn/hash-get e 'hex))
          (list 'type       (fn/hash-get e 'type))
        )
      ))

      (dsf/action 'select "Select" 'S (lambda nil (block (type)
        (dsf/session 'enhancement-hex (dsf/list-entry 'hex))
        (setq type (dsf/list-entry 'type))

        (switch
          (eq type 2)
            (god/enhancement-type)
          (eq type 1)
            (god/enhancement-power)
          (god/enhancement-apply)
        )
      )))
      (dsf/no-save 'select true)

      (dsf/no-back true)
      (dsf/show-screen)
    )))

    (setq god/enhancement-type (lambda nil (block nil
      (dsf/screen 'enhancement-type "Enhancement Damage Type" 'custompicker)
      (dsf/description "Choose the damage type of the enhancement")

      (dsf/list-data (fn/list-map (fn/range 0 15) i (list
        (list 'title      (fn/int-to-damagetype i))
        (list 'damagetype i)
      )))

      (dsf/action 'select "Select" 'S (lambda nil
        (block (damagetype hex)
          (setq damagetype (dsf/list-entry 'damagetype))
          (setq hex (dsf/session 'enhancement-hex))
          (setq hex (add hex (multiply damagetype 15)))
          (dsf/session 'enhancement-hex hex)
          (god/enhancement-power)
        )
      ))
      (dsf/no-save 'select true)

      (dsf/no-back true)
      (dsf/show-screen)
    )))

    (setq god/enhancement-power (lambda nil (block nil
      (dsf/screen 'enhancement-power "Enhancement Power" 'standard)
      (dsf/description "Choose the power of the enhancement. Can be a number from 0 to 15")
      (dsf/pane 'Counter)

      (dsf/action 'select 'Select 'S (lambda nil (block (pow hex)
        (setq pow (fn/constrain (dsf/counter) 0 15))
        (setq hex (dsf/session 'enhancement-hex))
        (setq hex (add hex pow))
        (dsf/session 'enhancement-hex hex)
        (god/enhancement-apply)
      )))
      (dsf/no-save 'select true)

      (dsf/no-back true)
      (dsf/show-screen)
    )))

    (setq god/enhancement-apply (lambda nil (block nil
      (dsf/screen 'enhancement-apply "Apply Enhancement")
      (dsf/on-init (lambda nil (block (hex itm obj)
        (setq hex (dsf/session-remove 'enhancement-hex))
        (setq itm (dsf/session-remove 'enhancement-item))
        (setq obj (dsf/session-remove 'enhancement-object))
        (if (shpEnhanceItem obj itm hex)
          (dsf/description "Enhancement applied")
          (dsf/description "An error ocurred. Please contact your local administrator")
        )
      )))

      (dsf/action 'more "Enhance More" 'E (lambda nil
        (god/enhance-item)
      ))
      (dsf/no-save 'more true)

      (dsf/action 'return "Return to Main" 'R (lambda nil
        (god/core-screen)
      ))
      (dsf/no-save 'return true)

      (dsf/no-back true)
      (dsf/show-screen)
    )))

    (setq god/decode-enhancement (lambda (value)
      (block (hex selected)
        (setq hex (multiply 16 (subtract (divide value 16) (modulo value 16))))
        (enum god/enhancement-data enhancement
          (if (eq (int (fn/hash-get enhancement 'hex)) hex)
            (setq selected enhancement)
          )
        )
        (if (not selected) (block nil
          (setq hex (multiply 16 (divide value 16)))
          (enum god/enhancement-data enhancement
            (if (eq (int (fn/hash-get enhancement 'hex)) hex)
              (setq selected enhancement)
            )
          )
        ))
        selected
      )
    ))

    (setq god/enhancement-data (list
      '(
        (name           "Damage Reflect")
        (devices        "Shield")
        (criteria       "s")
        (hex            "0x0300")
        (type           2)
        (desc           "Causes damage type Y to bounce off shields with probability X.")
      )
      '(
        (name           "Damage Transparency")
        (devices        "Shield")
        (criteria       "s")
        (hex            "0x8300")
        (type           2)
        (desc           "Causes damage type Y to pass through shields with probability X.")
      )
      '(
        (name           "Regeneration")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0200")
        (type           0)
        (desc           "More information needed..")
      )
      '(
        (name           "Decay")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x8200")
        (type           0)
        (desc           "More information needed..")
      )
      '(
        (name           "Immunity, Radiation")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0B00")
        (type           0)
        (desc           "Will render armor immune to radiation.")
      )
      '(
        (name           "Immunity, Blinding")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0B10")
        (type           0)
        (desc           "Will render armor immune to blinding.")
      )
      '(
        (name           "Immunity, EMP")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0B20")
        (type           0)
        (desc           "Will render armor immune to EMP.")
      )
      '(
        (name           "Immunity, Device Damage")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0B30")
        (type           0)
        (desc           "Will render armor immune to Device Damage.")
      )
      '(
        (name           "Immunity, Disintegration")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0B40")
        (type           0)
        (desc           "Will render armor immune to Disintegration.")
      )
      '(
        (name           "Immunity, Blinding/EMP/Device Damage")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0C00")
        (type           0)
        (desc           "Will render armor immune to Blinding/EMP/Device Damage.")
      )
      '(
        (name           "Interferes with Shields")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x8C00")
        (type           0)
        (desc           "Armor will interfere with shields.")
      )
      '(
        (name           "Regenerate near Sun")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0D00")
        (type           0)
        (desc           "Armor will regenerate near a sun.")
      )
      '(
        (name           "Refuel near Sun")
        (devices        "Armor")
        (criteria       "a")
        (hex            "0x0E00")
        (type           0)
        (desc           "Armor will refuel ship's reactor near a sun.")
      )
      '(
        (name           "Damage / Hit Point Bonus")
        (devices        "Weapon, Shield, Armor")
        (criteria       "was")
        (hex            "0x0100")
        (type           1)
        (desc           "Will increase damage output or hitpoints from 10 to 150 percent.")
      )
      '(
        (name           "Damage / Hit Point Penalty")
        (devices        "Weapon, Shield, Armor")
        (criteria       "was")
        (hex            "0x8100")
        (type           1)
        (desc           "Will decrease damage output or hitpoints from 10 to 150 percent.")
      )
      '(
        (name           "Speed Increase")
        (devices        "Weapon")
        (criteria       "w")
        (hex            "0x1000")
        (type           1)
        (desc           "Will increase a weapons rate of fire from 10 to 150%.")
      )
      '(
        (name           "Speed Decrease")
        (devices        "Weapon")
        (criteria       "w")
        (hex            "0x9000")
        (type           1)
        (desc           "Will decrease a weapons rate of fire from 10 to 150%.")
      )
      '(
        (name           "Damage Reduction, Energy")
        (devices        "Shield, Armor")
        (criteria       "sa")
        (hex            "0x0600")
        (type           1)
        (desc           "More information needed.")
      )
      '(
        (name           "Damage Reduction, Matter")
        (devices        "Shield, Armor")
        (criteria       "sa")
        (hex            "0x0700")
        (type           1)
        (desc           "More information needed.")
      )
      '(
        (name           "Damage Reduction, Special I")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x0800")
        (type           2)
        (desc           "Reduce damage of type Y and Y+1. More information needed.")
      )
      '(
        (name           "Damage Reduction, Special II")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x0900")
        (type           2)
        (desc           "Reduce damage of type Y. More information needed.")
      )
      '(
        (name           "Damage Reduction, Special III")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x0A00")
        (type           2)
        (desc           "Reduce damage of type Y and Y+2 with 1.5*X. More information needed.")
      )
      '(
        (name           "Damage Increase, Energy")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x8600")
        (type           1)
        (desc           "More information needed.")
      )
      '(
        (name           "Damage Increase, Matter")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x8700")
        (type           1)
        (desc           "More information needed.")
      )
      '(
        (name           "Damage Increase, Special I")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x8800")
        (type           2)
        (desc           "Increase damage of type Y and Y+1. More information needed.")
      )
      '(
        (name           "Damage Increase, Special II")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x8900")
        (type           2)
        (desc           "Increase damage of type Y. More information needed.")
      )
      '(
        (name           "Damage Increase, Special III")
        (devices        "Shield, Armor, (Weapon?)")
        (criteria       "wsa")
        (hex            "0x8A00")
        (type           2)
        (desc           "Increase damage of type Y and Y+2 with 1.5*X. More information needed.")
      )
      '(
        (name           "Efficiency")
        (devices        "Shield, Weapon")
        (criteria       "ws")
        (hex            "0x0F00")
        (type           1)
        (desc           "Lowers power consumption. Effect of higher X unknown. More information needed.")
      )
      '(
        (name           "Decrease Efficiency")
        (devices        "Shield, Weapon")
        (criteria       "ws")
        (hex            "0x8F00")
        (type           1)
        (desc           "Increase power consumption. Effect of higher X unknown. More information needed.")
      )
    ))

    )
  </Globals>
</TranscendenceExtension>
<!--
vim:ts=2:sw=2:sts=2:ft=tscript:
-->

